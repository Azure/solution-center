{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "bastionName": {
      "type": "string",
      "defaultValue": "BastionHost"
    },
    "networkName": {
      "type": "string",
      "defaultValue": "VmStarterKit"
    },
    "vmSubnetName": {
      "type": "string",
      "defaultValue": "VMs"
    },
    "vmName": {
      "type": "string",
      "defaultValue": "vm-01"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v5"
    },
    "windowsOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },
    "windowsSku": {
      "type": "string",
      "defaultValue": "2022-datacenter-azure-edition-core"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    },
    "recoveryServicesVaultName": {
      "type": "string",
      "defaultValue": "rsv-VmBackupVault"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2022-10-01",
      "name": "[parameters('recoveryServicesVaultName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {
        "publicNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.RecoveryServices/vaults/{0}', parameters('recoveryServicesVaultName'))]",
      "name": "[format('{0}-diagnosticsettings', parameters('recoveryServicesVaultName'))]",
      "properties": {
        "logs": [
          {
            "categoryGroup": "allLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ],
        "workspaceId": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.logAnalyticsWorkspaceId.value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure')]",
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('recoveryServicesVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkName": {
            "value": "[parameters('networkName')]"
          },
          "vmSubnetName": {
            "value": "[parameters('vmSubnetName')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "networkName": {
              "type": "string"
            },
            "vmSubnetName": {
              "type": "string"
            },
            "openWebPorts": {
              "type": "bool",
              "defaultValue": false
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "functions": [],
          "variables": {
            "vNetName": "[format('vnet-{0}', parameters('networkName'))]",
            "vNetAddressPrefix": "10.1.0.0/16",
            "bastionSubnetAddressPrefix": "10.1.0.0/24",
            "vmSubnetAddressPrefix": "10.1.1.0/24",
            "nsgName": "[format('nsg-subnet-{0}', parameters('vmSubnetName'))]",
            "bastionSubnetName": "AzureBastionSubnet"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[variables('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[if(equals(parameters('openWebPorts'), false()), createArray(), createArray(createObject('name', 'AllowHttpInbound', 'properties', createObject('protocol', 'Tcp', 'sourcePortRange', '*', 'destinationPortRange', '80', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 100, 'direction', 'Inbound'))))]"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[variables('vNetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vNetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('bastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('bastionSubnetAddressPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('vmSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('vmSubnetAddressPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/virtualNetworks/{0}', variables('vNetName'))]",
              "name": "[format('{0}-diagnosticsettings', variables('vNetName'))]",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', variables('nsgName'))]",
              "name": "[format('{0}-diagnosticsettings', variables('nsgName'))]",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              ]
            }
          ],
          "outputs": {
            "vNetName": {
              "type": "string",
              "value": "[variables('vNetName')]"
            },
            "bastionSubnetName": {
              "type": "string",
              "value": "[variables('bastionSubnetName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "bastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "bastionName": {
            "value": "[parameters('bastionName')]"
          },
          "vNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.vNetName.value]"
          },
          "bastionSubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.bastionSubnetName.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "bastionName": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "bastionSubnetName": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "functions": [],
          "variables": {
            "bastionHostName": "[format('bas-{0}', parameters('bastionName'))]",
            "bastionIpAddressName": "[format('pip-{0}', parameters('bastionName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[variables('bastionIpAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-07-01",
              "name": "[variables('bastionHostName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig01",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionIpAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('bastionSubnetName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionIpAddressName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/bastionHosts/{0}', variables('bastionHostName'))]",
              "name": "[format('{0}-diagnosticsettings', variables('bastionHostName'))]",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/bastionHosts', variables('bastionHostName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/publicIPAddresses/{0}', variables('bastionIpAddressName'))]",
              "name": "[format('{0}-diagnosticsettings', variables('bastionIpAddressName'))]",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionIpAddressName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "monitoring-infrastructure",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[format('stvmlogs{0}', uniqueString(resourceGroup().id))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "log-VmStarterKit"
            },
            "logAnalyticsSku": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "allowedValues": [
                "CapacityReservation",
                "Free",
                "LACluster",
                "PerGB2018",
                "PerNode",
                "Premium",
                "Standalone",
                "Standard"
              ]
            },
            "logAnalyticsRetentionInDays": {
              "type": "int",
              "defaultValue": 30
            },
            "createDataCollectionRule": {
              "type": "bool",
              "defaultValue": true
            },
            "dataCollectionRuleName": {
              "type": "string",
              "defaultValue": "MSVMI-ama-vmi-vmss-dcr"
            }
          },
          "functions": [],
          "variables": {
            "vmInsightsName": "[format('VMInsights({0})', parameters('logAnalyticsWorkspaceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('logAnalyticsSku')]"
                },
                "retentionInDays": "[parameters('logAnalyticsRetentionInDays')]"
              }
            },
            {
              "condition": "[parameters('createDataCollectionRule')]",
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2021-04-01",
              "name": "[parameters('dataCollectionRuleName')]",
              "location": "[parameters('location')]",
              "properties": {
                "description": "Data collection rule for VM Insights",
                "dataSources": {
                  "performanceCounters": [
                    {
                      "name": "VMInsightsPerfCounters",
                      "streams": [
                        "Microsoft-InsightsMetrics"
                      ],
                      "samplingFrequencyInSeconds": 60,
                      "counterSpecifiers": [
                        "\\VmInsights\\DetailedMetrics"
                      ]
                    }
                  ],
                  "extensions": [
                    {
                      "streams": [
                        "Microsoft-ServiceMap"
                      ],
                      "extensionName": "DependencyAgent",
                      "name": "DependencyAgentDataSource"
                    }
                  ]
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                      "name": "VMInsightsPerf-Logs-Dest"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-InsightsMetrics"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  },
                  {
                    "streams": [
                      "Microsoft-ServiceMap"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[variables('vmInsightsName')]",
              "location": "[parameters('location')]",
              "plan": {
                "name": "[variables('vmInsightsName')]",
                "product": "OMSGallery/VMInsights",
                "publisher": "Microsoft",
                "promotionCode": ""
              },
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "id-StarterKitVMs",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
              "name": "[format('{0}-blob-diagnosticsettings', parameters('logAnalyticsWorkspaceName'))]",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[format('{0}-diagnosticsettings', parameters('storageAccountName'))]",
              "properties": {
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', parameters('storageAccountName'), 'default')]",
              "name": "[format('{0}-blob-diagnosticsettings', parameters('storageAccountName'))]",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.blob]"
            },
            "dataCollectionRuleName": {
              "type": "string",
              "value": "[parameters('dataCollectionRuleName')]"
            },
            "managedIdentityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-StarterKitVMs')]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-StarterKitVMs')).clientId]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('virtual-machine-{0}', parameters('vmName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "windowsOffer": {
            "value": "[parameters('windowsOffer')]"
          },
          "windowsSku": {
            "value": "[parameters('windowsSku')]"
          },
          "vNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2019-10-01').outputs.vNetName.value]"
          },
          "vmSubnetName": {
            "value": "[parameters('vmSubnetName')]"
          },
          "bootLogStorageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.storageAccountName.value]"
          },
          "recoveryServicesVaultName": {
            "value": "[parameters('recoveryServicesVaultName')]"
          },
          "dataCollectionRuleName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.dataCollectionRuleName.value]"
          },
          "managedIdentityResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.managedIdentityResourceId.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.managedIdentityClientId.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vNetName": {
              "type": "string"
            },
            "vmSubnetName": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "windowsOffer": {
              "type": "string"
            },
            "windowsSku": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "bootLogStorageAccountName": {
              "type": "string"
            },
            "bootLogStorageAccountResourceGroup": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "recoveryServicesVaultName": {
              "type": "string"
            },
            "dataCollectionRuleName": {
              "type": "string"
            },
            "managedIdentityResourceId": {
              "type": "string"
            },
            "managedIdentityClientId": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "recoveryVaultPolicyName": "DefaultPolicy",
            "backupProtectionContainer": "[format('iaasvmcontainer;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('vmName'))]",
            "backupProtectedItemName": "[format('vm;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('vmName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "primary": true,
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('vmSubnetName'))]"
                      }
                    }
                  }
                ],
                "enableIPForwarding": false
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-08-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[parameters('managedIdentityResourceId')]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                    "patchSettings": {
                      "patchMode": "AutomaticByPlatform",
                      "enableHotpatching": true
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "[parameters('windowsOffer')]",
                    "sku": "[parameters('windowsSku')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('bootLogStorageAccountResourceGroup')), 'Microsoft.Storage/storageAccounts', parameters('bootLogStorageAccountName')), '2022-09-01').primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'InstallIIS')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.7",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools && powershell.exe remove-item 'C:\\inetpub\\wwwroot\\iisstart.htm' && powershell.exe Add-Content -Path 'C:\\inetpub\\wwwroot\\iisstart.htm' -Value $('Hello World from ' + $env:computername)"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'HealthExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.ManagedServices",
                "type": "ApplicationHealthWindows",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "protocol": "http",
                  "port": 80,
                  "requestPath": "/",
                  "intervalInSeconds": 5,
                  "numberOfProbes": 1
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'DependencyAgentWindows')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                "type": "DependencyAgentWindows",
                "typeHandlerVersion": "9.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "enableAMA": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureMonitorWindowsAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": true,
                "settings": {
                  "authentication": {
                    "managedIdentity": {
                      "identifier-name": "client_id",
                      "identifier-value": "[parameters('managedIdentityClientId')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
              "apiVersion": "2019-11-01-preview",
              "name": "[format('{0}/Microsoft.Insights/VMInsights-Dcr-Association', parameters('vmName'))]",
              "properties": {
                "description": "Association of data collection rule for VM Insights.",
                "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
              "apiVersion": "2022-04-01",
              "name": "[format('{0}/Azure/{1}/{2}', parameters('recoveryServicesVaultName'), variables('backupProtectionContainer'), variables('backupProtectedItemName'))]",
              "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryServicesVaultName'), variables('recoveryVaultPolicyName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                "friendlyName": "[parameters('vmName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkInterfaces/{0}', format('{0}-nic', parameters('vmName')))]",
              "name": "[format('{0}-diagnosticsettings', format('{0}-nic', parameters('vmName')))]",
              "properties": {
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure')]",
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('recoveryServicesVaultName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
      ]
    }
  ],
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.126.58533",
      "templateHash": "14568828317595309093"
    }
  }
}