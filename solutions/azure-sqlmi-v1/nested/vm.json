{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet id where nic and VM should be placed"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "allowedValues": [
                "Standard_D4s_v3",
                "Standard_D8ds_v4",
                "Standard_E32ads_v5"
            ],
            "metadata": {
                "description": "Size of the VM."
            }
        },
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "Resource name prefix."
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Admin user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password."
            }
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "OS disk type of the VM."
            }
        },
        "securityType": {
            "type": "string",
            "defaultValue": "DiskWithVMGuestState",
            "allowedValues": [
                "VMGuestStateOnly",
                "DiskWithVMGuestState"
            ],
            "metadata": {
                "description": "VM security type."
            }
        }
    },
    "variables": {
        "windowsConfiguration": {
            "enableAutomaticUpdates": "true",
            "provisionVmAgent": "true"
        },
        "vmName": "[concat(parameters('resourceName'), '-vm')]",
        "networkInterfaceName": "[concat(parameters('resourceName'), '-vm-nic')]",
        "networkSecurityGroupName": "[concat(parameters('resourceName'), '-vm-nsg')]",
        "networkSecurityGroupId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "priority": 100,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[3389]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('networkSecurityGroupId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[variables('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('networkInterfaceName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'-osdisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]",
                            "securityProfile": {
                                "securityEncryptionType": "[parameters('securityType')]"
                            }
                        }
                    },
                    "imageReference": {
                        "publisher": "microsoftwindowsserver",
                        "offer": "windowsserver",
                        "sku": "2022-datacenter-smalldisk-g2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": "[variables('windowsConfiguration')]"
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "ConfidentialVM"
                }
            }
        }
    ]
}