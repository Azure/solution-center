[
    {
        "title": "ChatGPT + Enterprise data with Azure OpenAI and AI Search",
        "description": "A sample app for the Retrieval-Augmented Generation pattern running in Azure, using Azure AI Search for retrieval and Azure OpenAI large language models to power ChatGPT-style and Q&A experiences.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo",
        "tags": [
            "OpenAI",
            "Azure",
            "AI Search",
            "ChatGPT",
            "Enterprise"
        ],
        "id": "88bce5a4-8e70-4c83-a87c-4d68e34eaf7e",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI and AI Search"
        ],
        "sampleQueries": [
            "How to use Azure AI Search to power ChatGPT-style and Q&A experiences",
            "What is the process for setting up Azure OpenAI for an enterprise application?",
            "Can I use Azure OpenAI to enhance ChatGPT responses with my company's proprietary data?",
            "How to integrate Azure AI Search with ChatGPT for custom knowledge bases?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Azure Cognitive Search",
            "Azure OpenAI"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ],
        "sampleQuestions": [
            "How does retrieval-augmentation work within the Azure AI infrastructure?",
            "Which Azure services should I avoid if I only need ChatGPT and AI Search capabilities?",
            "Is it possible to customize the ChatGPT model provided by the Azure OpenAI service?"
        ]
    },
    {
        "title": "Starter - Bicep",
        "description": "A starter template with Bicep as infrastructure provider",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-starter-bicep",
        "tags": [
            "bicep",
            "msft"
        ],
        "id": "6772728c-49cd-48c5-99fb-2f1435b2a62f",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy resources in Azure using Bicep?",
            "What is Bicep in Azure Development, and how does it improve infrastructure-as-code practices?",
            "Can I use Bicep to define resources in a declarative way for Azure deployments?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Starter - Terraform",
        "description": "A starter template with Terraform as infrastructure provider",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-starter-terraform",
        "tags": [
            "terraform",
            "msft"
        ],
        "id": "550708e7-b74e-448d-9de8-b60eb57e8208",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up a Terraform infrastructure with Azure DevOps?",
            "What are the best practices for managing infrastructure as code using Terraform on Azure?",
            "Can I use the starter template for Terraform to deploy resources in different Azure regions?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Terraform"
        ],
        "negativeMatch": [
            "Azure App Service",
            "Azure Functions",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "WordPress with Azure Container Apps",
        "description": "A blueprint to easily and quickly create and deploy your first scalable and secure WordPress site to Azure, leveraging Azure Container Apps with Azure Database for MariaDb.",
        "author": "Konstantinos Pantos",
        "source": "https://github.com/Azure-Samples/apptemplate-wordpress-on-ACA",
        "tags": [
            "php",
            "javascript",
            "aca",
            "agw",
            "rediscache",
            "monitor",
            "keyvault",
            "bicep",
            "msft"
        ],
        "id": "bdc334e1-d0da-4401-b3a0-ac1b6a03f2d9",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a WordPress site on Azure Container Apps?",
            "What steps are involved in securing a WordPress installation on Azure?",
            "Can I use Azure Database for MariaDB with WordPress in Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "PHP",
            "JavaScript"
        ],
        "negativeMatch": [
            "Azure Virtual Machines",
            "Azure App Service",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "React Web App with C# API and MongoDB",
        "description": "A blueprint for getting a React web app with a C# API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-csharp-cosmos-sql",
        "tags": [
            "dotnetCsharp",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "bicep",
            "msft"
        ],
        "id": "a8b10a54-9384-4fed-b59b-c71ed95c131c",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a React web app with a C# backend on Azure?",
            "Can I use MongoDB with a C# API for my Azure-hosted application?",
            "What are the steps to use Bicep for setting up infrastructure for a web app on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "ReactJS",
            "C#",
            "MongoDB",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Table Storage",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo",
        "tags": [
            "bicep",
            "nodejs",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "12d2cfbe-830b-4b06-aa07-8ce09c372d77",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React web app with Node.js backend on Azure?",
            "Can I use MongoDB with a Node.js API for a ToDo app on Azure?",
            "What is the process for setting up a React front-end with Node.js API and MongoDB on Azure using Infrastructure as Code?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Node.js",
            "TypeScript",
            "JavaScript",
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault",
            "MongoDB",
            "React"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Static React Web App + Functions with Node.js API and MongoDB",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting static web apps with serverless logic and functionality.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-swa-func",
        "tags": [
            "bicep",
            "swa",
            "functions",
            "nodejs",
            "typescript",
            "javascript",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "appservice",
            "msft"
        ],
        "id": "efbd5a95-560b-409d-8b5c-407d5f15d0e9",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "React",
            "MongoDB"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Virtual Machines",
            "Azure Machine Learning",
            "Azure HDInsight"
        ],
        "sampleQuestions": [
            "How do I deploy a React front-end with a Node.js API using Azure?",
            "Can I use MongoDB with Azure Functions for serverless architectures?",
            "What is the role of Bicep templates in Azure static web app configurations?"
        ]
    },
    {
        "title": "Static React Web App + Functions with Python API and MongoDB",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The frontend, currently a ToDo application, is designed as a placeholder that can easily be removed and replaced with your own frontend code. This architecture is for hosting static web apps with serverless logic and functionality.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo-swa-func",
        "tags": [
            "bicep",
            "swa",
            "functions",
            "python",
            "typescript",
            "javascript",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "appservice",
            "fastapi",
            "msft"
        ],
        "id": "9df1ed02-2102-415e-bf5d-dec8dd6787cb",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React.js web app with a Python API to Azure?",
            "What are the steps to connect a React front end with a Python (FastAPI) backend in Azure?",
            "Can I use MongoDB with Azure Functions for a serverless web application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "React.js",
            "Python",
            "FastAPI",
            "Azure Functions",
            "MongoDB",
            "CosmosDB",
            "TypeScript",
            "JavaScript"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Virtual Machines",
            "Azure SQL Database",
            "Azure App Service"
        ]
    },
    {
        "title": "React Web App with Python API and MongoDB - Terraform",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Terraform) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo-terraform",
        "tags": [
            "python",
            "typescript",
            "javascript",
            "cosmosdb",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "terraform",
            "appservice",
            "fastapi",
            "msft"
        ],
        "id": "616b6d54-c34b-44dd-b2d3-6557daee156e",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a React web app with a FastAPI backend to Azure using Terraform?",
            "Can I connect a React.js front-end with a Python FastAPI and MongoDB backend in Azure?",
            "What is the process for setting up CosmosDB for use with a MongoDB API in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "React",
            "MongoDB",
            "FastAPI",
            "Terraform",
            "CosmosDB"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Virtual Machines",
            "Azure Kubernetes Service",
            "Azure Functions",
            "Azure Logic Apps"
        ]
    },
    {
        "title": "React Web App with Node.js API and MongoDB - Terraform",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Terraform) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-terraform",
        "tags": [
            "nodejs",
            "typescript",
            "javascript",
            "cosmosdb",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "terraform",
            "appservice",
            "msft"
        ],
        "id": "a1e493de-1f5b-4cc1-b9e1-18b07f073abe",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React web app with Node.js and MongoDB using Terraform?",
            "Can I use this blueprint to set up a ToDo app in Azure?",
            "What are the steps to replace the sample ToDo app with my own React application code?"
        ],
        "sourceType": "Azd",
        "tech": [
            "React",
            "Node.js",
            "MongoDB",
            "Terraform"
        ],
        "negativeMatch": [
            "Azure Virtual Machines",
            "Azure SQL Database",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "React Web App with Python API and MongoDB",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo",
        "tags": [
            "bicep",
            "python",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "fastapi",
            "msft"
        ],
        "id": "07b915d6-29cc-45ee-a973-c338de02310f",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React.js and FastAPI web application to Azure using Cosmos DB?",
            "What are the steps to set up a MongoDB API in Cosmos database for a Python backend?",
            "Can I use the provided bicep Infrastructure as Code assets to deploy my own web application code on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "React.js",
            "MongoDB",
            "Bicep",
            "FastAPI"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Virtual Machines",
            "Azure Active Directory",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Containerized React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database onto Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running containerized apps or microservices on a serverless platform   This architecture is for running containerized microservices without managing the servers.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-aca",
        "tags": [
            "bicep",
            "nodejs",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "aca",
            "msft"
        ],
        "id": "3bdd6e9a-60f5-4189-9caa-b5859d2c33a4",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React web app with Node.js API on Azure using containers?",
            "What is the best way to manage MongoDB when used with containerized Node.js applications in Azure?",
            "How do I implement Infrastructure as Code for a MERN stack application on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Node.js",
            "TypeScript",
            "JavaScript",
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault",
            "MongoDB",
            "React.js",
            "Azure Container Apps"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Containerized React Web App with Python API and MongoDB",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The frontend, currently a ToDo application, is designed as a placeholder that can easily be removed and replaced with your own frontend code. This architecture is for running containerized apps or microservices on a serverless platform.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo-aca",
        "tags": [
            "bicep",
            "python",
            "typescript",
            "javascript",
            "aca",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "fastapi",
            "msft"
        ],
        "id": "b808d61c-f3af-4fa6-842d-39710b893b81",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy a React.js web app with a Python FastAPI on Azure using MongoDB?",
            "What are the steps to containerize a web app using Azure CosmosDB with MongoDB API?",
            "Can I integrate Azure Key Vault with a Python FastAPI and React front-end application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Python",
            "TypeScript",
            "JavaScript",
            "ReactJS",
            "FastAPI",
            "MongoDB"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "React Web App with C# API and SQL Database",
        "description": "A blueprint for getting a React web app with a C# API and a SQL database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-csharp-sql",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "typescript",
            "javascript",
            "appservice",
            "azuresql",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "1a0d0c97-261a-4bce-a699-f72b83e5bcea",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React web app with a C# API to Azure?",
            "What are the necessary steps to connect a React frontend with a C# backend using a SQL database on Azure?",
            "Can I use Bicep to define infrastructure for a React and C# application with Azure SQL Database?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dotnet C#",
            "TypeScript",
            "JavaScript",
            "React.js",
            "SQL",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure Blob Storage",
            "Azure Data Lake",
            "Azure Table Storage"
        ]
    },
    {
        "title": "React Web App with Java API and MongoDB",
        "description": "A blueprint for getting a React.js web app with a Java API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-java-mongo",
        "tags": [
            "bicep",
            "java",
            "typescript",
            "appservice",
            "cosmosdb",
            "keyvault",
            "monitor",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "c1af6086-4f34-4350-aea5-81e103d7e3eb",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "Can Azure App Service host a React.js-based web application?",
            "How do I integrate a MongoDB database with a Java API in Azure?",
            "What are the steps to set up a secure Cosmos DB instance for my React and Java application on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "React.js",
            "MongoDB",
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Key Vault",
            "Azure Monitor",
            "Bicep",
            "TypeScript"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure VM",
            "Azure Cache for Redis",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Containerized React Web App with Java API and MongoDB",
        "description": "A blueprint for getting a React web app with a Java API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running containerized apps or microservices on a serverless platform.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-java-mongo-aca",
        "tags": [
            "bicep",
            "java",
            "typescript",
            "appservice",
            "cosmosdb",
            "keyvault",
            "monitor",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "f5d0f91a-0ebc-4fe4-86cd-6414f810d54d",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up a React web app with a Java API using MongoDB on Azure?",
            "What is the best practice for containerizing a React application with Java backend on Azure?",
            "Can I deploy a serverless architecture for a React and Java app on Azure using MongoDB?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "MongoDB",
            "React",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Blob Storage",
            "Azure Table Storage",
            "Azure Virtual Machines",
            "Azure App Service Environment"
        ]
    },
    {
        "title": "Static React Web App + Functions with C# API and SQL Database",
        "description": "A blueprint for getting a React web app with a C# API and a SQL database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting static web apps with serverless logic and functionality.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-csharp-sql-swa-func",
        "tags": [
            "bicep",
            "swa",
            "functions",
            "dotnetCsharp",
            "typescript",
            "javascript",
            "monitor",
            "keyvault",
            "reactjs",
            "appservice",
            "azuresql",
            "msft"
        ],
        "id": "262a5d45-4d80-4aaa-8fba-f27d2876dcdb",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a React app with a C# API on Azure using Bicep?",
            "Can I use Azure Functions with C# to create a serverless backend for a React web app?",
            "What are the steps to connect a React front-end to a SQL Database on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "bicep",
            "C#",
            "TypeScript",
            "JavaScript",
            "React",
            "Azure Functions",
            "Azure SQL Database"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure Blob Storage",
            "Azure Event Hub",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Kubernetes React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React.js web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running Kubernetes clusters without setting up the control plane.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-aks",
        "tags": [
            "bicep",
            "nodejs",
            "typescript",
            "javascript",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "appservice",
            "cosmosdb",
            "aks",
            "msft"
        ],
        "id": "93b22870-f071-4104-ada9-ba45e71329a1",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a React web app using Node.js API on Kubernetes in Azure?",
            "Where can I find a blueprint for setting up a web app with MongoDB in Azure without managing the Kubernetes control plane?",
            "Can I use Bicep templates to automate the deployment of my containerized web app on Azure Kubernetes Service?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "React",
            "MongoDB",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure App Service",
            "Azure Virtual Machines",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Static React Web App with Java API and PostgreSQL",
        "description": "A blueprint for getting a React web app with a Java API and a Azure Database for PostgreSQL - Flexible Server on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Yi Liu",
        "source": "https://github.com/Azure-Samples/ASA-Samples-Web-Application",
        "tags": [
            "bicep",
            "java",
            "nodejs",
            "spring",
            "webapps",
            "azurespringapps",
            "azuredb-postgreSQL",
            "msft"
        ],
        "id": "757881c8-74ad-4f62-9633-7af22a2be3aa",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I connect a React frontend to a Java backend API on Azure?",
            "What steps are needed to deploy a Java API with an Azure Database for PostgreSQL?",
            "Can I use Bicep to define infrastructure for a static React web app and Java API on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "React",
            "PostgreSQL",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Blob Storage",
            "Azure Table Storage"
        ]
    },
    {
        "title": "ChatGPT Plugin using Python (FastAPI)",
        "description": "This is a quickstart for creating a ChatGPT Plugin using Python and Azure.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/openai-plugin-fastapi",
        "tags": [
            "bicep",
            "python",
            "aca",
            "cosmosdb",
            "monitor",
            "fastapi",
            "ai",
            "msft"
        ],
        "id": "e64314dd-aa61-4175-959d-ffa624b0423d",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a FastAPI service with ChatGPT capabilities on Azure?",
            "What are the necessary steps to integrate Cosmos DB with a Python ChatGPT plugin in Azure?",
            "Can Azure Monitor be used to track the performance of a ChatGPT plugin developed with FastAPI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "FastAPI",
            "Cosmos DB",
            "Azure Monitor"
        ],
        "negativeMatch": []
    },
    {
        "title": "ChatGPT + Enterprise Data with Azure OpenAI and Cognitive Search",
        "description": "A sample app for the Retrieval-Augmented Generation pattern running in Azure, using Azure Cognitive Search for retrieval and Azure OpenAI large language models to power ChatGPT-style and Q&A experiences.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo-csharp",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "aks",
            "kubernetes",
            "aca",
            "cognitivesearch",
            "openai",
            "chatgpt",
            "rediscache",
            "ai",
            "msft"
        ],
        "id": "fc3c956d-a8d3-4d60-87f6-d6b442f64602",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can Azure Cognitive Search be used to improve ChatGPT responses for enterprise data?",
            "What is required to deploy the ChatGPT + Azure Cognitive Search application on AKS?",
            "Can Redis Cache enhance the performance of ChatGPT applications powered by Azure OpenAI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "Bicep",
            "Azure Kubernetes Service",
            "Azure Container Apps",
            "Azure Cognitive Search",
            "OpenAI",
            "Redis Cache"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Simple Chat Application using Azure OpenAI",
        "description": "A sample chat app that uses Python and the Flask framework to stream ChatGPT completions as server-sent events to a simple frontend.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/chatgpt-quickstart",
        "tags": [
            "bicep",
            "python",
            "openai",
            "chatgpt",
            "ai",
            "flask",
            "aca",
            "msft"
        ],
        "id": "3f85f8e5-619f-495b-bf49-c5bd6edaa350",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to create a chat application using Azure OpenAI and Flask?",
            "What are the steps to stream ChatGPT completions using server-sent events in Flask?",
            "Can this sample chat application be deployed using Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Flask",
            "OpenAI"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Spring ChatGPT Application using Azure OpenAI on Azure Spring Apps",
        "description": "A sample that uses Java Spring framework to build ChatGPT-style application running in Azure Spring Apps.",
        "author": "Yi Liu",
        "source": "https://github.com/Azure-Samples/spring-chatgpt-sample",
        "tags": [
            "bicep",
            "java",
            "openai",
            "chatgpt",
            "ai",
            "blobstorage",
            "azurespringapps",
            "msft"
        ],
        "id": "27170e89-7227-4bd0-a593-9a292498366f",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy a ChatGPT-style application using Java Spring on Azure?",
            "What are the steps to integrate OpenAI with Azure Spring Apps?",
            "Can Azure Blob Storage be used to manage chat logs for a ChatGPT application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "Azure OpenAI"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "Enterprise-Grade Reference Architecture for JavaScript",
        "description": "A reference architecture and components for building enterprise-grade modern composable frontends (or micro-frontends) and cloud-native applications. It is a collection of best practices, architecture patterns, and functional components that can be used to build and deploy modern JavaScript applications to Azure.",
        "author": "JavaScript Advocacy Team, Natalia Venditto",
        "source": "https://github.com/Azure-Samples/contoso-real-estate",
        "tags": [
            "bicep",
            "javascript",
            "swa",
            "aca",
            "keyvault",
            "blobstorage",
            "azuredb-postgreSQL",
            "cosmosdb",
            "apim",
            "enterprisepatterns",
            "msft",
            "popular"
        ],
        "id": "25a3dda0-8840-44dc-b850-4f2468991ecb",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to assemble a modern JavaScript frontend with enterprise-grade architecture components?",
            "What are some recommended best practices for deploying JavaScript applications to Azure?",
            "Can you provide an example workflow to utilize CosmosDB within an enterprise JavaScript application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "JavaScript",
            "Node.js"
        ],
        "negativeMatch": [
            "Azure Machine Learning",
            "Azure Logic Apps",
            "Azure Container Instances",
            "Azure Service Fabric"
        ]
    },
    {
        "title": "Python (Django) Web App with PostgreSQL in VNet",
        "description": "A restaurants review web app that uses whitenoise for static assets and PostgreSQL for the database. Ready for deployment on App Service with a PostgreSQL Flexible Server inside a VNet.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/msdocs-django-postgresql-sample-app",
        "tags": [
            "python",
            "django",
            "webapps",
            "azuredb-postgreSQL",
            "appservice",
            "vnets",
            "msft",
            "popular"
        ],
        "id": "aeb56402-db75-42d0-8d21-839d9d1e8158",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a Django app with PostgreSQL on Azure App Service?",
            "Can I use Azure Database for PostgreSQL within a Virtual Network?",
            "What are the steps to set up whitenoise for serving static files in a Django web app on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Django",
            "PostgreSQL",
            "whitenoise"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Blob Storage",
            "Azure Table Storage",
            "Azure Virtual Machines"
        ]
    },
    {
        "title": "Python (Django) Web App with PostgreSQL via Azure Container Apps",
        "description": "A space tourism web app that uses PostgreSQL for the database. The web app is containerized and deployed with Azure Container Apps with secrets managed by Azure Key Vault",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-django-postgres-aca",
        "tags": [
            "python",
            "django",
            "aca",
            "azuredb-postgreSQL",
            "bicep",
            "msft"
        ],
        "id": "1eab6419-b143-41d3-9b86-c8aeb9158fda",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I manage secrets for a Django app using Azure Key Vault?",
            "Can you provide steps to deploy a containerized Django app with PostgreSQL on Azure Container Apps?",
            "What are the best practices for connecting a Django web app to PostgreSQL on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Django",
            "PostgreSQL",
            "Azure Container Apps",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Python (Flask) Web App with PostgreSQL in VNet",
        "description": "A restaurants review web app with a PostgreSQL database, written in the Python Flask framework plus SQL-Alchemy plus Alembic for database interactions. Ready for deployment on App Service with a PostgreSQL Flexible Server inside a VNet.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/msdocs-flask-postgresql-sample-app",
        "tags": [
            "python",
            "webapps",
            "azuredb-postgreSQL",
            "appservice",
            "vnets",
            "flask",
            "msft",
            "popular"
        ],
        "id": "6f229853-0a89-4b5c-8e7b-6fcca519147b",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy a Flask web app with a PostgreSQL database in Azure using a VNet?",
            "What are the steps to interact with a PostgreSQL database using SQLAlchemy and Alembic in a Python Flask web app?",
            "Can I isolate my Azure PostgreSQL Flexible Server within a Virtual Network when deploying a Flask web app?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Flask",
            "SQLAlchemy",
            "Alembic",
            "PostgreSQL"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure Table Storage",
            "Azure Blob Storage",
            "Azure SQL Database",
            "Azure Redis Cache"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub C# ACA ServiceBus",
        "description": "A complete microservice application featuring Dapr Pub-Sub, deployed to Azure Container Apps and Azure Service Bus Topics with dead-lettering support.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-csharp-servicebus",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "aca",
            "dapr",
            "servicebus",
            "msft"
        ],
        "id": "fc959a8e-de77-48a5-b01c-d3effdb5265d",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up Azure Service Bus Topics with dead-lettering in a microservices application?",
            "What are the steps to deploy a Dapr-enabled C# microservice to Azure Container Apps?",
            "Can you show an example of Pub-Sub messaging in a C# application using Dapr and Azure Service Bus?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            ".NET C#",
            "Dapr",
            "Azure Service Bus"
        ],
        "negativeMatch": []
    },
    {
        "title": "Microservices App - Dapr PubSub Python ACA ServiceBus",
        "description": "A complete microservice application featuring Dapr Pub-Sub, deployed to Azure Container Apps and Azure Service Bus Topics with dead-lettering support.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-python-servicebus",
        "tags": [
            "bicep",
            "python",
            "aca",
            "dapr",
            "servicebus",
            "msft"
        ],
        "id": "3689e30c-5ea3-4c69-9a3c-e34ee217a770",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to configure Pub-Sub in a microservice using Dapr with Azure Service Bus?",
            "What are the steps for deploying a Python microservice with Dapr to Azure Container Apps?",
            "Can Azure Service Bus Topics with dead-lettering be used with Dapr for reliable messaging in microservices?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Dapr",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub Node.js ACA ServiceBus",
        "description": "A complete microservice application featuring Dapr Pub-Sub, deployed to Azure Container Apps and Azure Service Bus Topics with dead-lettering support.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-nodejs-servicebus",
        "tags": [
            "bicep",
            "javascript",
            "nodejs",
            "aca",
            "dapr",
            "servicebus",
            "msft"
        ],
        "id": "17c7f10c-45ff-4f1b-bba8-9e98cf1a8d54",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I use Dapr Pub-Sub with Node.js in Azure Container Apps?",
            "What are the steps to deploy a microservices application with Azure Service Bus and Dapr?",
            "How is dead-lettering support implemented in Azure Service Bus with Dapr?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "Dapr"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Logic Apps",
            "Azure Functions",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Microservices App - Dapr Bindings Cron C# ACA PostgreSQL",
        "description": "Create microservice to demonstrate Dapr's bindings API to work with external systems as inputs and outputs. The service listens to input binding events from a system CRON and then outputs the contents of local data to a PostgreSQL output binding.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/bindings-dapr-csharp-cron-postgres",
        "tags": [
            "dapr",
            "dotnetCsharp",
            "azuredb-postgreSQL",
            "aca",
            "msft"
        ],
        "id": "a3c9e1b9-b2fc-4957-a5e2-bd3a4fd9f601",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can Dapr bindings be used for CRON job execution in a microservices application?",
            "What is the process of setting up a PostgreSQL output binding with Dapr in C#?",
            "Can Dapr bindings be used to containerize microservices in Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            ".NET C#"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Table Storage"
        ]
    },
    {
        "title": "Microservices App - Dapr Bindings Cron Python ACA PostgreSQL",
        "description": "Create a microservice app to demonstrate Dapr's bindings API to work with external systems as inputs and outputs. The service listens to input binding events from a system CRON and then outputs the contents of local data to a postgreSQL output binding.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/bindings-dapr-python-cron-postgres",
        "tags": [
            "dapr",
            "python",
            "azuredb-postgreSQL",
            "aca",
            "msft"
        ],
        "id": "e2515292-52ac-4d22-b87b-d8c3fd9219fa",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I set up a Dapr binding with a system CRON as the trigger?",
            "What steps are needed to output data from Dapr to a PostgreSQL database using bindings?",
            "Can Dapr's bindings be used for scheduling tasks with a CRON input in a microservices architecture?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Python",
            "PostgreSQL",
            "Azure"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Table Storage"
        ]
    },
    {
        "title": "Microservices App - Dapr Bindings Cron Node.js ACA PostgreSQL",
        "description": "Create a microservice app to demonstrate Dapr's bindings API to work with external systems as inputs and outputs. The service listens to input binding events from a system CRON and then outputs the contents of local data to a postgreSQL output binding.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/bindings-dapr-nodejs-cron-postgres",
        "tags": [
            "dapr",
            "nodejs",
            "azuredb-postgreSQL",
            "javascript",
            "aca",
            "msft"
        ],
        "id": "21a01a78-5c09-4fae-b42c-5b5793246560",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up a Dapr input binding with a system CRON in Node.js?",
            "What's the process for connecting Dapr to PostgreSQL in an Azure microservices environment?",
            "Can Dapr bindings be used for scheduled tasks in a Node.js application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "PostgreSQL",
            "Dapr"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Cache for Redis",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Microservices App - Dapr Service Invoke Node.js ACA",
        "description": "Create two microservices that communicate using Dapr's Service Invocation API. The Service Invocation API enables your applications to communicate reliably and securely by leveraging auto-mTLS and built-in retries.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/svc-invoke-dapr-nodejs",
        "tags": [
            "dapr",
            "nodejs",
            "aca",
            "msft"
        ],
        "id": "a98c5bd6-a080-44cf-a10c-5fcbf6588f30",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I use Dapr Service Invocation API in Node.js applications?",
            "What are the security features of Dapr for microservices communication?",
            "How to set up mutual TLS for microservice communication in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Node.js"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Kubernetes Service",
            "Azure Logic Apps",
            "Azure App Service"
        ]
    },
    {
        "title": "Microservices App - Dapr Service Invoke Python ACA",
        "description": "Create two microservices that communicate using Dapr's Service Invocation API. The Service Invocation API enables your applications to communicate reliably and securely by leveraging auto-mTLS and built-in retries.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/svc-invoke-dapr-python",
        "tags": [
            "dapr",
            "python",
            "aca",
            "msft"
        ],
        "id": "46306dfe-017e-4d99-9240-e48309ba3726",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up Dapr for service-to-service invocation in Python?",
            "Can Dapr Service Invocation API be used for secure microservices communication in Azure?",
            "What are the advantages of using Dapr's built-in retries for microservice communication?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Python"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Microservices App - Dapr Service Invoke C# ACA",
        "description": "Create two microservices that communicate using Dapr's Service Invocation API. The Service Invocation API enables your applications to communicate reliably and securely by leveraging auto-mTLS and built-in retries.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/svc-invoke-dapr-csharp",
        "tags": [
            "dapr",
            "dotnetCsharp",
            "aca",
            "msft"
        ],
        "id": "b9afbe11-5351-4a6d-bd8a-77cf44a24e4f",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to create a Dapr microservices application in C#?",
            "What are the prerequisites for using Dapr in Azure Container Apps?",
            "Can I use Dapr's Service Invocation API for secure inter-service communication?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            ".NET C#"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Functions",
            "Azure Logic Apps"
        ]
    },
    {
        "title": "ChatGPT and Enterprise data with Azure OpenAI and Cognitive Search",
        "description": "Demonstration of how to leverage Azure OpenAI and Cognitive Search to enable Information Search and Discovery over organizational content.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo",
        "tags": [
            "openai",
            "chatgpt",
            "cognitivesearch",
            "python",
            "typescript",
            "bicep",
            "nodejs",
            "ai",
            "msft",
            "popular"
        ],
        "id": "eebc5dce-43e7-4fc3-8b91-13573c8076df",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up Azure OpenAI with Cognitive Search for enterprise data retrieval?",
            "Can Azure Cognitive Search be used to enhance ChatGPT capabilities within my company?",
            "What are the best practices for integrating Azure OpenAI models into enterprise search solutions?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "TypeScript",
            "Bicep",
            "Node.js"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "FastAPI on Azure Functions",
        "description": "A simple FastAPI app deployed to Azure Functions. Can also be run and debugged locally with the Azure Functions Core Tool emulator.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/fastapi-on-azure-functions",
        "tags": [
            "python",
            "fastapi",
            "functions",
            "msft"
        ],
        "id": "ec4855aa-505c-43b2-8bfd-3600c831d05a",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "FastAPI",
            "Azure Functions"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Logic Apps",
            "Azure App Service",
            "Azure Machine Learning"
        ],
        "sampleQuestions": [
            "How can I deploy a FastAPI app to Azure Functions?",
            "Can I use the Azure Functions Core Tool to emulate Azure Functions for local debugging of my FastAPI app?",
            "What are the benefits of using FastAPI with Azure Functions for serverless applications?"
        ]
    },
    {
        "title": "Spring PetClinic - Java Spring MySQL",
        "description": "Spring PetClinic application using a set of Azure solutions. Azure App Service for app hosting, Azure Database for MySQL for storage, Azure Key Vault for securing secret and Azure Application Insights for monitoring and logging.",
        "author": "Miller Wang",
        "source": "https://github.com/Azure-Samples/spring-petclinic-java-mysql",
        "tags": [
            "java",
            "appservice",
            "azuresql",
            "monitor",
            "keyvault",
            "appinsights",
            "bicep",
            "spring",
            "thymeleaf",
            "msft",
            "popular"
        ],
        "id": "a10a1a26-6f9a-4ca8-8b9b-e6a99a641d08",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy Spring PetClinic on Azure App Service?",
            "Can Azure Database for MySQL be used for the Spring PetClinic application?",
            "How does Azure Key Vault enhance security for the Spring PetClinic app?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "Thymeleaf",
            "MySQL",
            "Azure App Service",
            "Azure Key Vault",
            "Azure Application Insights"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure Blob Storage",
            "Azure Table Storage",
            "Azure HDInsight"
        ]
    },
    {
        "title": "Event Driven Java Application with Azure Service Bus on Azure Spring Apps",
        "description": "A complete event-driven application that includes everything you need to build, deploy, and monitor an Azure solution.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/ASA-Samples-Event-Driven-Application",
        "tags": [
            "java",
            "servicebus",
            "monitor",
            "keyvault",
            "azurespringapps",
            "bicep",
            "spring",
            "msft"
        ],
        "id": "e18d18a8-e26f-4be3-b1fb-cee3acd730ed",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up an event-driven Java application using Azure Service Bus?",
            "Can you show me how to monitor an Azure Spring Apps instance?",
            "What are the steps to integrate Azure Key Vault with an Azure Spring application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "Azure Service Bus",
            "Azure Key Vault"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Cosmos DB",
            "Azure Blob Storage"
        ]
    },
    {
        "firstName": "John",
        "lastName": "Doe",
        "age": 25,
        "address": {
            "streetAddress": "21 2nd Street",
            "city": "New York",
            "state": "NY",
            "postalCode": "10021-3100"
        },
        "phoneNumbers": [
            {
                "type": "home",
                "number": "212 555-1234"
            },
            {
                "type": "office",
                "number": "646 555-4567"
            }
        ],
        "children": [],
        "spouse": null
    },
    {
        "title": "Azure Functions - Text Summarization using AI Cognitive Language Service (C#-Isolated)",
        "description": "This sample shows how to take text documents as a input via BlobTrigger, does Text Summarization processing using the AI Congnitive Language service, and then outputs to another text document using BlobOutput binding.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-csharp-ai-textsummarize",
        "tags": [
            "functions",
            "cognitivesearch",
            "dotnetCsharp",
            "azureai",
            "ai",
            "msft"
        ],
        "id": "abdec121-45cb-4e73-a005-d944579a8db0",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do you configure Azure Blob Storage to work with Azure Functions for text summarization?",
            "What is required in C# to leverage AI Cognitive Language Service for summarizing text in Azure Functions?",
            "Can Azure Functions automatically summarize documents added to a blob container?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "Azure Functions",
            "Azure Cognitive Services"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure DevOps",
            "Azure Virtual Machines"
        ]
    },
    {
        "title": "Azure Functions - Text Summarization using AI Cognitive Language Service (Python v2 Function)",
        "description": "This sample shows how to take text documents as input via BlobTrigger, does Text Summarization processing using the AI Cognitive Language service, and then outputs to another text document using BlobOutput binding.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-python-ai-textsummarize",
        "tags": [
            "functions",
            "cognitivesearch",
            "python",
            "azureai",
            "ai",
            "msft"
        ],
        "id": "df35a2f8-da36-43b2-92df-aba105170e8c",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I automate text summarization using Azure Blob Storage with Azure Functions?",
            "Can Azure Cognitive Language Service be used for summarizing documents in real-time with Azure Functions?",
            "What are the steps to deploy a text summarization function using Python on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Azure Functions",
            "Azure Cognitive Services"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Reliable Web App Pattern for .NET",
        "description": "A multi-region enterprise web app with a 99.9% SLO and a focus on 12-factor apps and the well-architected framework. The sample app creates a concert booking application.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure/reliable-web-app-pattern-dotnet",
        "tags": [
            "dotnetCsharp",
            "bicep",
            "appservice",
            "keyvault",
            "frontdoor",
            "azuresql",
            "appinsights",
            "blobstorage",
            "webapps",
            "enterprisepatterns",
            "msft"
        ],
        "id": "33da45cd-d26c-42c1-8b0a-ae4b79847dde",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How is the multi-region support configured for the .NET web app?",
            "What are the best practices implemented in the concert booking application using the 12-factor app methodology?",
            "How does Azure Front Door contribute to the reliability of the web app?"
        ],
        "sourceType": "Azd",
        "tech": [
            "dotnetCsharp",
            "bicep",
            "appservice",
            "keyvault",
            "frontdoor",
            "azuresql",
            "appinsights",
            "blobstorage"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "React Component Toolkit with ChatGPT and OpenAI",
        "description": "A sample demo for building and testing react components and includes a set of unique features including AI component generation and automatic conversion to Azure APIM Widgets",
        "author": "Jenny Chen",
        "source": "https://github.com/Azure-Samples/react-component-toolkit-openai-demo",
        "tags": [
            "bicep",
            "openai",
            "chatgpt",
            "ai",
            "apim",
            "reactjs",
            "typescript",
            "javascript",
            "msft"
        ],
        "id": "8d6366f6-78e8-4339-8073-ab55f900ecbd",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I integrate OpenAI models into React components with this toolkit?",
            "Can you show me an example of a React component automatically converted to an Azure APIM Widget?",
            "Is there support for TypeScript in the AI component generation feature of this toolkit?"
        ],
        "sourceType": "Azd",
        "tech": [
            "React",
            "TypeScript",
            "JavaScript",
            "OpenAI",
            "ChatGPT"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Java Spring Apps with Azure OpenAI",
        "description": "AI Shopping Cart is a sample app template that supercharges your shopping experience with the power of AI. It leverages Azure OpenAI and Azure Spring Apps to build a recommendation engine that is not only scalable, resilient, and secure, but also personalized to your needs.",
        "author": "Pierre Malarme",
        "source": "https://github.com/Azure-Samples/app-templates-java-openai-springapps",
        "tags": [
            "spring",
            "openai",
            "ai",
            "aca",
            "azurespringapps",
            "azuredb-postgreSQL",
            "monitor",
            "reactjs",
            "bicep",
            "msft"
        ],
        "id": "1376d15a-343c-40d6-aaf3-38902d78c5ea",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "Azure OpenAI",
            "Azure Spring Apps",
            "Azure Database for PostgreSQL",
            "ReactJS",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ],
        "sampleQuestions": [
            "How do I use Azure Spring Apps with Azure OpenAI to build a recommendation engine?",
            "Can the AI Shopping Cart app template scale to handle high traffic on my ecommerce site?",
            "What steps are involved in deploying the AI Shopping Cart app template on Azure?"
        ]
    },
    {
        "title": "Java - ChatGPT + Enterprise data with Azure OpenAI and Cognitive Search",
        "description": "This repo is the java conversion of the well known chatGPT + Enterprise data code sample originally developed in python",
        "author": "Davide Antelmo",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo-java",
        "tags": [
            "java",
            "spring",
            "openai",
            "ai",
            "appservice",
            "cognitivesearch",
            "semantickernel",
            "reactjs",
            "bicep",
            "msft"
        ],
        "id": "554ba579-08d0-49ac-9c12-01087c0096f6",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy a Java app with Azure OpenAI and Cognitive Search in Azure?",
            "Can the Azure OpenAI and Cognitive Search integration be used for semantic search in a Java application?",
            "What are the steps for setting up an enterprise-level chatbot with OpenAI in a Java Spring application on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "OpenAI",
            "ReactJS",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "ChatGPT and RAG with Azure OpenAI and Cognitive Search for JavaScript",
        "description": "A reference sample to build Retrieval Augmented Generation applications using Azure Cognitive Search and Azure OpenAI.",
        "author": "JavaScript Advocacy Team, Natalia Venditto, Shibani Basava",
        "source": "https://github.com/Azure-Samples/azure-search-openai-javascript",
        "tags": [
            "ai",
            "bicep",
            "chatgpt",
            "cognitivesearch",
            "javascript",
            "nodejs",
            "openai",
            "typescript",
            "webcomponents",
            "microfrontend",
            "msft"
        ],
        "id": "f343a991-c4a1-4edb-bd4f-c0b05aadf26e",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I integrate Azure Cognitive Search with a ChatGPT model in JavaScript?",
            "Can I use Azure OpenAI to augment search results in my JavaScript application?",
            "What are the steps to set up a Retrieval Augmented Generation application in Node.js with Azure services?"
        ],
        "sourceType": "Azd",
        "tech": [
            "JavaScript",
            "Node.js",
            "TypeScript",
            "Web Components"
        ],
        "negativeMatch": []
    },
    {
        "title": "Bicep template to bootstrap Azure Deployment Environments",
        "description": "A template to deploy Azure DevCenter with the minimun configuration to start using Azure Deployment Environments and supercharge your platform engineering story. Infrastructure as Code (written in Bicep) will get you started quickly to enable developers to self-serve environments via the Developer Portal, Azure CLI or CI/CD pipelines.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-deployment-environments",
        "tags": [
            "bicep",
            "platformengineering",
            "ade",
            "msft"
        ],
        "id": "7e5276d7-b80c-4aa6-b8e6-750939a42ecd",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I bootstrap Azure Deployment Environments using Bicep templates?",
            "What are the minimum configurations needed to start using Azure Development Center?",
            "Can developers self-serve deployment environments using the provided Bicep templates in a CI/CD pipeline?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Azure DevOps"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Azure OpenAI Conference Session Recommender",
        "description": "Build a recommender using OpenAI, Azure Functions, Azure Static Web Apps, Azure SQL DB, Data API builder and Text Embeddings",
        "author": "Davide Mauri",
        "source": "https://github.com/Azure-Samples/azure-sql-db-session-recommender",
        "tags": [
            "msft",
            "reactjs",
            "appservice",
            "functions",
            "azuresql",
            "swa",
            "appinsights",
            "openai",
            "azureai",
            "enterprisepatterns",
            "ai"
        ],
        "id": "8e354d6e-1957-4441-80d6-0d350fe8bea5",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I use OpenAI to recommend conference sessions?",
            "What's the process for building a recommender system with Azure SQL DB?",
            "Is it possible to deploy a conference session recommender using Azure Functions and Static Web Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "ReactJS",
            "Azure Functions",
            "Azure Static Web Apps",
            "Azure SQL DB",
            "OpenAI"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub Java AKS",
        "description": "Demonstrate event-driven communication between microservices by leveraging the pub/sub messaging architecture using Dapr for a Java application running in an AKS cluster.",
        "author": "Mahmut Canga",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-aks-java",
        "tags": [
            "dapr",
            "java",
            "aks",
            "msft"
        ],
        "id": "27a9a8be-9479-4433-8ff6-9ce9af9c92b6",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I implement pub/sub messaging in an AKS cluster using Dapr?",
            "Can I use Java to build microservices that communicate through event-driven messages on Azure Kubernetes Service?",
            "What is the process for setting up Dapr for pub/sub messaging in a Java application on AKS?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Java",
            "Azure Kubernetes Service (AKS)"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure App Service"
        ]
    },
    {
        "title": "Azure Functions - Chat using ChatGPT (Node.js JavaScript Function)",
        "description": "This sample shows how to take a ChatGPT prompt as HTTP Get or Post input, calculates the completions using OpenAI ChatGPT service, and then returns the output plus caches in a Blob state store.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-javascript-ai-openai-chatgpt",
        "tags": [
            "functions",
            "openai",
            "javascript",
            "ai",
            "chatgpt",
            "msft"
        ],
        "id": "c0405eae-fd20-4404-a742-a1c69c6004e7",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy a Node.js Azure Function for chatting with ChatGPT?",
            "What is the benefit of using Azure Blob storage to cache ChatGPT conversations?",
            "Can Azure Functions be integrated with OpenAI to create a serverless chat interface?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "JavaScript",
            "Azure Functions",
            "OpenAI"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Azure Functions - Chat using ChatGPT (Python v2 Function)",
        "description": "This sample shows how to take a ChatGPT prompt as HTTP Get or Post input, calculates the completions using OpenAI ChatGPT service, and then returns the output plus caches in a Blob state store.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-python-ai-openai-chatgpt",
        "tags": [
            "functions",
            "openai",
            "python",
            "ai",
            "chatgpt",
            "msft"
        ],
        "id": "120f1e71-3110-44e7-9cc6-03e611083e9d",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I use Azure Functions with ChatGPT for automated chat responses?",
            "What steps are needed to deploy a Python v2 Function that uses ChatGPT on Azure?",
            "Can I cache ChatGPT responses in Azure Blob Storage using Azure Functions?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Azure Functions",
            "OpenAI"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning",
            "Azure App Service"
        ]
    },
    {
        "title": "Azure Functions - LangChain with Azure OpenAI and ChatGPT (Python v2 Function)",
        "description": "This sample shows how to take a human prompt as HTTP Get or Post input, calculates the completions using chains of human input and templates. This is a starting point that can be used for more sophisticated chains.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-python-ai-langchain",
        "tags": [
            "functions",
            "python",
            "ai",
            "msft"
        ],
        "id": "0d1ed1f5-b136-4320-b31f-c516f959bbaf",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up an Azure Function for AI-driven language completion?",
            "Can I use Azure Functions with Azure OpenAI to process conversational AI?",
            "What are some examples of template chains for language completions in Azure Functions?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Azure Functions",
            "Python",
            "Azure OpenAI"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Multi-repo ChatGPT and Enterprise data with Azure OpenAI and Cognitive Search",
        "description": "Azure OpenAI at scale in a secure manner.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure/GPT-RAG",
        "tags": [
            "openai",
            "chatgpt",
            "cognitivesearch",
            "python",
            "typescript",
            "bicep",
            "nodejs",
            "ai",
            "msft"
        ],
        "id": "adbc2d95-6bb8-4b0d-b0cb-2c0f34c19c11",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy Azure OpenAI for multi-repository ChatGPT integrations?",
            "What are the best practices for securing enterprise data with Azure Cognitive Search?",
            "Can Azure OpenAI be scaled to handle large multi-repo datasets with Cognitive Search?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "TypeScript",
            "Node.js"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "Azure Function with Event Hub with optional virtual network capabilities",
        "description": "An Azure Function app which sends events to and consumes from an Event Hub. The Function app can optionally be configured to integrate with a virtual network, and dependent resources configured with virtual network private endpoints. Managed identity is used for authentication to dependent resources.",
        "author": "Michael S. Collier",
        "source": "https://github.com/Azure-Samples/function-eventhub-vnet",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "functions",
            "appinsights",
            "keyvault",
            "eventhub",
            "azurestorage",
            "vnets",
            "msft"
        ],
        "id": "9a4d5000-89de-4ec2-beb4-9212d335edd7",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I integrate Azure Functions with Event Hub using a virtual network?",
            "What are the steps to configure private endpoints for Event Hub in Azure Functions?",
            "How does authentication with Managed Identity work for Azure Functions connected to Event Hub?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#",
            "Azure Functions"
        ],
        "negativeMatch": [
            "Azure Machine Learning",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure SQL Database"
        ]
    },
    {
        "title": "URL Shortener using Microsoft Orleans and Azure for hosting and data",
        "description": "An ASP.NET Core 8.0 web application to illustrate basic Microsoft Orleans concepts; such as working with Grains, Silos, and persistent state. Uses Azure Developer CLI (azd) to build, deploy, and monitor.",
        "author": "Azure Cosmos DB Content Team",
        "source": "https://github.com/azure-samples/orleans-url-shortener",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "cosmosdb",
            "msft",
            "aca"
        ],
        "id": "904f5d00-aed0-40e9-9e00-12c9482ae5c9",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up Microsoft Orleans in an ASP.NET Core application for a URL shortener service?",
            "Can you show how to use Azure Cosmos DB with Microsoft Orleans for state persistence?",
            "What are the steps for deploying an Orleans-based application using Azure Developer CLI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "ASP.NET Core",
            "C#",
            "Microsoft Orleans",
            "Azure"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Virtual Machines",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Azure OpenAI priority-based load balancer with Azure Container Apps",
        "description": "A load balancer crafted specifically for Azure OpenAI, which is aware of 'retry-after' headers and intelligently pauses traffic when certain OpenAI endpoints reach maximum capacity.",
        "author": "Andre Dewes",
        "source": "https://github.com/Azure-Samples/openai-aca-lb",
        "tags": [
            "aca",
            "openai",
            "ai",
            "msft",
            "bicep",
            "dotnetCsharp"
        ],
        "id": "c3694deb-a6d7-4c20-8bbf-f12486a503e3",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            ".NET",
            "C#"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Virtual Machines",
            "Azure SQL Database"
        ]
    },
    {
        "title": "Azure Kubernetes Service Store Demo",
        "description": "Sample microservices app for AKS demos, tutorials, and experiments.",
        "author": "AKS Content Team",
        "source": "https://github.com/azure-samples/aks-store-demo",
        "tags": [
            "terraform",
            "aks",
            "openai",
            "ai",
            "msft",
            "kubernetes",
            "helm"
        ],
        "id": "eff16b17-9019-4b60-8438-f49781946266",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [],
        "sourceType": "Azd",
        "tech": [
            "Terraform",
            "Helm",
            "Kubernetes"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning"
        ],
        "sampleQuestions": [
            "How can I set up a microservices app using Azure Kubernetes Service?",
            "What are the best practices for structuring Helm charts in AKS?",
            "How do I manage AKS resources using Terraform in a production environment?"
        ]
    },
    {
        "title": "Setting up Azure OpenAI as a central capability within your organization",
        "description": "Unleash the power of Azure AI to all your application developers in a secure & manageable way with Azure API Management and Azure Container Apps, utilizing Azure OpenAI PTUs across your organization with chargeback capabilities.",
        "author": "Azure AI Content Team, Remco Brosky, Mick Vleeshouwer, Pascal van der Heiden",
        "source": "https://github.com/Azure/enterprise-azureai",
        "tags": [
            "bicep",
            "apim",
            "openai",
            "ai",
            "appinsights",
            "monitor",
            "enterprisepatterns",
            "aca",
            "dotnetCsharp",
            "msft"
        ],
        "id": "94b2c974-76a2-4df6-b9a7-7a9dbc9b707f",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can Azure OpenAI be integrated into my company\u2019s existing Azure infrastructure?",
            "What steps are necessary to set up Azure API Management with Azure OpenAI for multiple application developers?",
            "Is there a way to monitor usage and implement chargeback for Azure OpenAI services within my organization?"
        ],
        "sourceType": "Azd",
        "tech": [
            ".NET",
            "C#",
            "Azure API Management",
            "Azure Container Apps"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Virtual Machines",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "SAP Cloud SDK on Azure Functions Quickstart (TypeScript)",
        "description": "This repos serves as quick-start project showcasing SAP Cloud SDK for JavaScript OData consumption running on Azure Functions. Its primary purpose is to set you up for success for your SAP extension project on Azure and reduce the lead time to your first successful deployment as much as possible with developer friendly commands.",
        "author": "Martin Pankraz, Christian Lechner",
        "source": "https://github.com/Azure-Samples/functions-javascript-sap-cloud-sdk-quickstart",
        "tags": [
            "typescript",
            "nodejs",
            "bicep",
            "webapps",
            "apim",
            "keyvault",
            "appinsights",
            "nestjs",
            "sap",
            "sapcap",
            "msft"
        ],
        "id": "e2835a74-6bb9-4a15-b4d8-dae78ee6f0ad",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [],
        "sourceType": "Azd",
        "tech": [
            "TypeScript",
            "Node.js",
            "Bicep",
            "APIM",
            "KeyVault",
            "AppInsights",
            "NestJS"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning",
            "Azure Service Fabric"
        ],
        "sampleQuestions": [
            "How to deploy SAP Cloud SDK on Azure Functions using TypeScript?",
            "What are the best practices for integrating SAP services with Azure using the SAP Cloud SDK?",
            "Can I use the SAP Cloud SDK in a serverless architecture on Azure?"
        ]
    },
    {
        "title": "SAP CAP on Azure App Service Quickstart",
        "description": "This repos serves as quick-start project showcasing SAP Cloud Application Programming Model (CAP) for Node.js OData consumption from SAP S/4HANA running on Azure App Services backed with Azure Cosmos DB for PostgreSQL. SAP offers a native module cds-dbs for PostgreSQL integration.",
        "author": "Martin Pankraz, Volker Buzek",
        "source": "https://github.com/Azure-Samples/app-service-javascript-sap-cap-quickstart",
        "tags": [
            "nodejs",
            "bicep",
            "webapps",
            "apim",
            "keyvault",
            "appinsights",
            "nestjs",
            "sap",
            "cosmosdb",
            "azuredb-postgreSQL",
            "sapcloudsdk",
            "msft"
        ],
        "id": "87cca4d5-958c-4255-87ae-5df122ec34ad",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy SAP CAP on Azure App Service with Cosmos DB integration?",
            "Can I integrate SAP S/4HANA with Node.js using Azure App Services?",
            "What steps are involved in setting up Azure Cosmos DB for PostgreSQL with SAP Cloud Application Programming Model?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "NestJS",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning",
            "Azure SQL Database"
        ]
    },
    {
        "title": "Azure API Management policy for priority-based routing to Azure OpenAI",
        "description": "A load balancer policy crafted specifically for Azure OpenAI, which is aware of 'retry-after' headers and intelligently pause traffic when certain OpenAI endpoints reach maximum capacity.",
        "author": "Andre Dewes, Chris Ayers",
        "source": "https://github.com/Azure-Samples/openai-apim-lb",
        "tags": [
            "apim",
            "openai",
            "ai",
            "msft",
            "bicep"
        ],
        "id": "c0e05ee1-7abc-4c7e-b609-0b8374d221b8",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How does the Azure API Management policy handle 'retry-after' headers for OpenAI services?",
            "What is the process for setting up priority-based routing in Azure API Management for OpenAI endpoints?",
            "How can I ensure my API Management layer respects OpenAI endpoint capacity and avoids sending excessive requests?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Azure API Management"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Data Factory",
            "Azure SQL Database",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Langfuse on Azure",
        "description": "Deploy Langfuse (open-source LLM observability platform) to Azure Container Apps with PostgreSQL Flexible Server.",
        "author": "Pamela Fox",
        "source": "https://github.com/Azure-Samples/langfuse-on-azure",
        "tags": [
            "aca",
            "azuredb-postgreSQL",
            "keyvault",
            "ai",
            "msft",
            "bicep"
        ],
        "id": "3a69118c-f6c3-4d59-90c4-188975527db2",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy Langfuse to Azure Container Apps with a PostgreSQL Flexible Server?",
            "Can I use Azure Key Vault for managing secrets in Langfuse deployed on Azure?",
            "What are the steps to configure observability for LLMs using Langfuse on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Azure Bicep",
            "Azure Container Apps",
            "PostgreSQL",
            "Azure Key Vault"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Virtual Machines"
        ]
    },
    {
        "title": "PostgreSQL + Pgvector",
        "description": "Deploy a PostgreSQL Flexible Server with Pgvector extension and keyless auth, then access it from Python scripts.",
        "author": "Pamela Fox",
        "source": "https://github.com/Azure-Samples/azure-postgres-pgvector-python",
        "tags": [
            "azuredb-postgreSQL",
            "ai",
            "msft",
            "bicep",
            "python"
        ],
        "id": "fa79ba6d-e558-4025-b5ea-23970851b075",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy PostgreSQL with Pgvector on Azure?",
            "What is the process for accessing PostgreSQL Flexible Server using Python?",
            "Can I use keyless authentication with PostgreSQL on Azure for my Python application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "PostgreSQL",
            "Pgvector",
            "Python",
            "Azure"
        ],
        "negativeMatch": [
            "Cosmos DB",
            "Azure Table Storage",
            "SQL Server",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Azure Open AI management and logging via Azure API Management",
        "description": "To use Azure Open AI in production, you need to manage each application and user by issuing new keys, and monitor their usage such as number of tokens they consume and types of endpoint and mode they use. The solution uses Azure APIM and other resources to support such requirements.",
        "author": "Kenichiro Nakamura",
        "source": "https://github.com/microsoft/aoai-logging-with-apim",
        "tags": [
            "bicep",
            "msft",
            "ai",
            "openai",
            "apim",
            "keyvault",
            "dotnetCsharp"
        ],
        "id": "c0b0b2c7-596f-45ca-9df8-ff9355ac471e",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I manage and log Azure OpenAI usage per application using Azure API Management?",
            "What is the process for issuing new keys and monitoring token consumption in Azure OpenAI through Azure APIM?",
            "Can Azure APIM be used to handle different endpoints and modes for users accessing Azure OpenAI models?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            ".NET C#"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Cosmos DB",
            "Azure SQL Database"
        ]
    },
    {
        "title": ".NET AI samples with Azure OpenAI",
        "description": ".NET samples demonstrating how to use AI in your .NET applications. Each sample demonstrate a specific AI scenario with only a few lines of code. It consists of a console application, running locally, that will send request(s) to an Azure OpenAI Service deployed in your Azure subscription",
        "author": "Frank Boucher",
        "source": "https://github.com/dotnet/ai-samples",
        "tags": [
            "ai",
            "openai",
            "dotnetCsharp",
            "azureai",
            "msft",
            "gpt",
            "dall-e",
            "semantickernel",
            "bicep"
        ],
        "id": "b33ac45a-f158-449d-8933-29f998143284",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I implement GPT-3 in a .NET console application using Azure OpenAI?",
            "What are the steps to deploy Azure OpenAI Service for a .NET application?",
            "Is there a sample code for integrating DALL-E with my .NET application on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            ".NET",
            "Azure OpenAI"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Azure OpenAI Conference Session Assistant",
        "description": "Build a conference assistant using using Vector Search and Retrieval Augmented Generator to allow attendees to ask questions about conference in natural language",
        "author": "Davide Mauri",
        "source": "https://github.com/Azure-Samples/azure-sql-db-session-recommender-v2",
        "tags": [
            "bicep",
            "msft",
            "reactjs",
            "appservice",
            "functions",
            "azuresql",
            "swa",
            "appinsights",
            "openai",
            "azureai",
            "enterprisepatterns",
            "ai"
        ],
        "id": "24831952-5b15-471d-9eb9-4dbdb61ae196",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I find sessions that are related to AI at the conference?",
            "What are the upcoming keynotes for today?",
            "Where can I get more information about the speaker for the Azure SQL session?"
        ],
        "sourceType": "Azd",
        "tech": [
            "ReactJS",
            "Azure Functions",
            "Azure SQL Database",
            "Static Web Apps",
            "Application Insights",
            "OpenAI"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Logic Apps",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Dynamic Configuration for AKS workloads (w/o changing ConfigMaps or with Azure App Configuration)",
        "description": "A sample that demonstrates how to dynamically configure an Azure Kubernetes Service (AKS) workload with Azure App Configuration.",
        "author": "Azure App Configuration",
        "source": "https://github.com/Azure-Samples/azure-appconfig-aks",
        "tags": [
            "azureappconfig",
            "kubernetes",
            "aks",
            "dotnetCsharp",
            "bicep",
            "webapps",
            "msft",
            "new"
        ],
        "id": "3b4599e6-bb03-4f19-bce8-5151a0225c7b",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to dynamically change configuration in AKS with Azure App Configuration?",
            "Can I update AKS settings without modifying ConfigMaps directly?",
            "What is the process for implementing Azure App Configuration in an AKS cluster?"
        ],
        "sourceType": "Azd",
        "tech": [
            "DotNetCsharp",
            "Azure Kubernetes Service",
            "Bicep"
        ],
        "negativeMatch": [
            "Azure Logic Apps",
            "Azure Virtual Machines",
            "Azure Functions",
            "Azure SQL Database"
        ]
    },
    {
        "title": "Chat with your Data Solution Accelerator",
        "description": "A Solution Accelerator for the RAG pattern running in Azure, using Azure AI Search for retrieval and Azure OpenAI large language models to power ChatGPT-style and Q&A experiences. This includes most common requirements and best practices.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/chat-with-your-data-solution-accelerator",
        "tags": [
            "bicep",
            "python",
            "typescript",
            "flask",
            "cognitivesearch",
            "openai",
            "chatgpt",
            "ai",
            "msft",
            "new"
        ],
        "id": "3450a16f-3b71-48ba-9bd5-c6568f105300",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I integrate my enterprise data with ChatGPT using Azure AI Search?",
            "What steps are required to deploy the RAG pattern solution on Azure with OpenAI?",
            "Can the Chat with your Data Solution Accelerator be customized to use a different AI model from Azure's offerings?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "TypeScript",
            "Flask"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Azure Kubernetes Service Store Demo",
        "description": "Sample microservices app for AKS demos, tutorials, and experiments.",
        "author": "AKS Content Team",
        "source": "https://github.com/azure-samples/aks-store-demo",
        "tags": [
            "aks",
            "kubernetes",
            "terraform",
            "openAI",
            "app",
            "helm",
            "ai",
            "Azure"
        ],
        "id": "9d295613-0607-4337-97b3-bdf702cd9252",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy the AKS Store Demo using Azure DevOps?",
            "What are the best practices for scaling microservices in AKS?",
            "Is there a Helm chart included with the AKS Store Demo for easier deployment?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Kubernetes",
            "Helm",
            "Terraform"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Virtual Machines",
            "Azure Logic Apps",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Containerized Apps on Azure Kubernetes Service",
        "description": "A base Azure Kubernetes Service template with placeholders to include the application source code (no application source code included) and Kubernetes manifest files.",
        "author": "Ahmed Sabbour",
        "source": "https://github.com/sabbour/aks-app-template",
        "tags": [
            "aks",
            "kubernetes",
            "bicep",
            "grafana",
            "app",
            "keda",
            "prometheus",
            "Azure",
            "containers"
        ],
        "id": "3e709e9e-cfbf-44e5-8cac-52e0e371f4f8",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy containerized apps using Azure Kubernetes Service?",
            "Can I monitor my Azure Kubernetes Service deployments using Grafana and Prometheus?",
            "What is KEDA and how is it used with Azure Kubernetes Service?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Kubernetes",
            "Bicep",
            "Grafana",
            "Prometheus"
        ],
        "negativeMatch": [
            "Azure App Service",
            "Azure Functions",
            "Azure Logic Apps"
        ]
    },
    {
        "title": "Kubernetes React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React.js web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running Kubernetes clusters without setting up the control plane.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-aks",
        "tags": [
            "aks",
            "kubernetes",
            "bicep",
            "cosmosdb",
            "javascript",
            "keyvault",
            "mongodb",
            "monitor",
            "nodejs",
            "reactjs",
            "typescript",
            "app",
            "Azure"
        ],
        "id": "f408ffe0-f200-4faa-b35e-2674e901cd12",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to deploy a React web app with Node.js backend on Azure Kubernetes Service?",
            "Is there a blueprint for a Kubernetes application using MongoDB on Azure?",
            "What are the steps to set up Infrastructure as Code for deploying a React app on AKS?"
        ],
        "sourceType": "Azd",
        "tech": [
            "AKS",
            "Kubernetes",
            "React.js",
            "Node.js",
            "MongoDB",
            "Bicep",
            "Cosmos DB",
            "JavaScript",
            "Key Vault",
            "TypeScript"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure SQL Database"
        ]
    },
    {
        "title": "Quickstart: Deploy an Azure Kubernetes Service (AKS) cluster using Azure CLI",
        "description": "Learn how to quickly deploy a Kubernetes cluster and deploy an application in Azure Kubernetes Service (AKS) using Azure CLI.",
        "author": "Microsoft",
        "source": "CreateAksClusterAzureCli",
        "tags": [
            "kubernetes",
            "azure",
            "CLI",
            "aks",
            "deployment",
            "cluster",
            "application",
            "setup",
            "tutorial",
            "provision"
        ],
        "id": "faf0d1e7-daca-4783-b19e-ba2527d2d9d3",
        "deploymentOptions": [
            "execDocs"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Faks%2Flearn%2Fquick-kubernetes-deploy-cli.md"
            }
        },
        "products": [],
        "sampleQueries": [
            "How can I deploy an AKS cluster using Azure CLI?",
            "What are the steps to set up an application in an AKS cluster through Azure CLI?",
            "Can you provide a tutorial for provisioning a Kubernetes cluster in Azure?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Azure Kubernetes Service",
            "Azure CLI"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure App Service"
        ]
    },
    {
        "title": "Tutorial: Deploy WordPress on AKS cluster by using Azure CLI",
        "description": "Learn how to quickly build and deploy WordPress on AKS with Azure Database for MySQL - Flexible Server.",
        "author": "Microsoft",
        "source": "CreateWordpressAks",
        "tags": [
            "wordpress",
            "aks",
            "azure",
            "mysql",
            "deployment",
            "database",
            "container",
            "server",
            "build",
            "tutorial"
        ],
        "id": "75a2b5f3-82ec-4d00-af34-f07c61583d2a",
        "deploymentOptions": [
            "execDocs"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Fmysql%2Fflexible-server%2Ftutorial-deploy-wordpress-on-aks.md"
            }
        },
        "products": [],
        "sampleQueries": [
            "How do I deploy WordPress on an AKS cluster using Azure CLI?",
            "What are the steps for setting up Azure Database for MySQL - Flexible Server for WordPress?",
            "Can you provide a tutorial for building and deploying WordPress on Azure Kubernetes Service (AKS)?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Azure CLI",
            "WordPress",
            "AKS",
            "Azure Database for MySQL"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure App Service"
        ]
    },
    {
        "title": "Quickstart: Building your first static site with the Azure Static Web Apps using the CLI",
        "description": "Learn to deploy a static site to Azure Static Web Apps with the Azure CLI.",
        "author": "Microsoft",
        "source": "CreateStaticWebAppAzureCli",
        "tags": [
            "static",
            "azure",
            "webapp",
            "apps",
            "deployment",
            "cli",
            "tutorial",
            "site",
            "build",
            "AzureCLI"
        ],
        "id": "199d0d86-8cb0-431e-8acf-a3c5d9527fd0",
        "deploymentOptions": [
            "execDocs"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Fstatic-web-apps%2Fget-started-cli.md"
            }
        },
        "products": [],
        "sampleQueries": [
            "How do I deploy a static site using Azure CLI?",
            "Can I use Azure Static Web Apps for a personal portfolio site?",
            "What are the steps to initialize an Azure Static Web App with the CLI?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Azure Static Web Apps",
            "Azure CLI"
        ],
        "negativeMatch": [
            "Azure App Service",
            "Azure Functions",
            "Azure Kubernetes Service",
            "Azure Logic Apps"
        ]
    },
    {
        "title": "Create virtual machines in a Flexible scale set using Azure CLI",
        "description": "Learn how to create a Virtual Machine Scale Set in Flexible orchestration mode using Azure CLI.",
        "author": "Microsoft",
        "source": "CreateVmFlexibleScaleSet",
        "tags": [
            "virtual",
            "scaleset",
            "azure",
            "cli",
            "orchestration",
            "flexible",
            "deployment",
            "machine",
            "tutorial",
            "oneclick"
        ],
        "id": "1ef90b47-d262-4370-8731-e6568014100f",
        "deploymentOptions": [
            "execDocs"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Fvirtual-machine-scale-sets%2Fflexible-virtual-machine-scale-sets-cli.md"
            }
        },
        "products": [],
        "sampleQueries": [
            "How can I create a Virtual Machine Scale Set in Azure using CLI?",
            "What are the steps to deploy a Flexible orchestration mode scale set with Azure CLI?",
            "Is there a tutorial for setting up VM scale sets in Azure with Flexible orchestration?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Azure CLI"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Cosmos DB",
            "Azure SQL Database"
        ]
    },
    {
        "title": "Deploy Inspektor Gadget in an Azure Kubernetes Service cluster",
        "description": "This tutorial shows how to deploy Inspektor Gadget in an AKS cluster",
        "author": "Microsoft",
        "source": "DeployInspektorGadget",
        "tags": [
            "tutorial",
            "inspektor",
            "gadget",
            "aks",
            "cluster",
            "deployment",
            "kubernetes",
            "setup",
            "install",
            "monitoring"
        ],
        "id": "cf9941e7-df14-400d-86a3-4ef82f016d05",
        "deploymentOptions": [
            "execDocs"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "DeployIGonAKS/README.md"
            }
        },
        "products": [],
        "sampleQueries": [
            "How do I deploy Inspektor Gadget on an Azure Kubernetes Service cluster?",
            "Can you provide a tutorial for setting up Inspektor Gadget in AKS for monitoring purposes?",
            "What are the steps to install Inspektor Gadget on a Kubernetes cluster hosted in Azure?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Kubernetes",
            "Azure Kubernetes Service"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure DevOps"
        ]
    },
    {
        "title": "Deploy a Scalable & Secure Azure Kubernetes Service cluster using the Azure CLI",
        "description": "This tutorial where we will take you step by step in creating an Azure Kubernetes Web Application that is secured via https.",
        "author": "Microsoft",
        "source": "DeployScalableAKS",
        "tags": [
            "tutorial",
            "azure",
            "kubernetes",
            "web",
            "application",
            "HTTPS",
            "secure",
            "deployment",
            "setup",
            "step-by-step",
            "one click"
        ],
        "id": "dc1f07b7-6a62-42d8-b683-6d666f56dd64",
        "deploymentOptions": [
            "execDocs"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "CreateAKSWebApp%2FREADME.md"
            }
        },
        "products": [],
        "sampleQueries": [
            "How do I set up a scalable Azure Kubernetes Service cluster with secured HTTPS using Azure CLI?",
            "What are the best practices for deploying a secure web application on Azure Kubernetes Service?",
            "Can you provide a step-by-step guide for deploying an AKS cluster that is scalable and secure?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Azure CLI",
            "Kubernetes"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Azure OpenAI RAG Chat Experience with Node.js",
        "description": "This sample shows how to build an AI chat experience with Retrieval-Augmented Generation (RAG) using LangChain4J and OpenAI language models. The application is hosted on Azure Static Web Apps and Azure Container Apps, with Azure AI Search as the vector database. You can use it as a starting point for building more complex AI applications.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-openai-rag-workshop",
        "tags": [
            "openAI",
            "rag",
            "azure",
            "nodejs",
            "langchain",
            "app",
            "chat",
            "search",
            "ai",
            "model"
        ],
        "id": "7ea19a29-b97a-47e9-b5b8-3e974d77db88",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I implement RAG with OpenAI language models in Node.js?",
            "What is the role of Azure AI Search in the Azure OpenAI RAG chat experience?",
            "How to deploy an AI chat application using Azure Static Web Apps and Azure Container Apps?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Node.js",
            "Azure Static Web Apps",
            "Azure Container Apps",
            "Azure AI Search"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Serverless AI Chat with RAG using LangChain.js",
        "description": "This sample shows how to build a serverless AI chat experience with Retrieval-Augmented Generation using LangChain.js and Azure. The application is hosted on Azure Static Web Apps and Azure Functions, with Azure AI Search as the vector database. You can use it as a starting point for building more complex AI applications.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/serverless-chat-langchainjs",
        "tags": [
            "serverless",
            "ai",
            "chat",
            "azure",
            "langchain",
            "search",
            "app",
            "openAI"
        ],
        "id": "ff16119d-5fa9-4011-b0f3-62ef2b71650f",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How to configure Azure Static Web Apps for a serverless AI chat application?",
            "Can LangChain.js be used with other cloud providers or is it specific to Azure-based applications?",
            "What are the requirements to set up Azure AI Search as a vector database for a serverless chat app?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "JavaScript",
            "Node.js",
            "Azure Functions"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Virtual Machines",
            "Azure Machine Learning",
            "Azure Cosmos DB"
        ]
    },
    {
        "title": "Use Key Vault from App Service with Azure Managed Identity",
        "description": "This sample shows how to use Azure KeyVault from App Service with Azure Managed Identity.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/app-service-msi-keyvault-dotnet",
        "tags": [
            "key",
            "vault",
            "appservice",
            "azure",
            "identity",
            "dotnet",
            "azure",
            "msi"
        ],
        "id": "7215fa5f-57b0-4b7e-a347-cd07c2fc2fd1",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [
            "azure",
            "dotnet",
            "aspnet",
            "azure-app-service",
            "azure-key-vault"
        ],
        "sampleQueries": [
            "How do I configure Azure Managed Identity to access Key Vault from an App Service?",
            "What are the advantages of using Managed Identity with Azure Key Vault in an App Service environment?",
            "Can I secure secrets in Azure Key Vault and use them in an Azure App Service without hardcoding credentials?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "dotnet",
            "aspnet"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure Blob Storage",
            "Azure Data Lake"
        ]
    },
    {
        "title": "ASP.NET sample for Azure App Service",
        "description": "This is an ASP.NET MVC web app that you can deploy to Azure App Service using Git.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/app-service-web-dotnet-get-started",
        "tags": [
            "dotnet",
            "azure",
            "appservice",
            "git",
            "web",
            "app",
            "mvc",
            "aspnet"
        ],
        "id": "9b718fe5-05b1-4444-96be-7e5706f876d7",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I deploy an ASP.NET MVC web app to Azure App Service using Git?",
            "Is there a sample demonstrating the deployment of an ASP.NET app in Azure?",
            "Where can I find a guide on hosting an ASP.NET MVC application on Azure App Service?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "ASP.NET",
            ".NET",
            "MVC"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Kubernetes Service",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "Azure AI Search Comparison Tool",
        "description": "This repository contains a React application that demonstrates the Azure AI Search Comparison Tool. This tool provides a web interface for visualizing different retrieval modes available in Azure AI Search. Additionally, the tool supports image search using text-to-image and image-to-image search functionalities. It leverages Azure OpenAI for text embeddings and Azure AI Vision API for image embeddings.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-search-comparison-tool",
        "tags": [
            "azure",
            "ai",
            "search",
            "react",
            "app",
            "web",
            "openAI",
            "image-to-image",
            "text-to-image",
            "retrieval"
        ],
        "id": "a470d1ed-7e75-421b-8794-9c6165b73c79",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How does the Azure AI Search Comparison Tool leverage Azure OpenAI for text embedding?",
            "Can I compare image-to-image search with text-to-image search using the Azure AI Search Comparison Tool?",
            "What visualization options are available in the Azure AI Search Comparison Tool to analyze retrieval modes?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "React",
            "Azure OpenAI",
            "Azure AI Vision API"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Cosmos DB",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "Azure OpenAI Chat Frontend",
        "description": "This folder contains a Lit implementation, consisting of multiple LitElements that can be used to interact with the Azure OpenAI API. It is a classic chat UI that can be used to send messages to the API and receive responses.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-openai-chat-frontend",
        "tags": [
            "lit",
            "azure",
            "openAI",
            "typescript",
            "litelement",
            "vite",
            "rollup",
            "frontend"
        ],
        "id": "8a8499b2-ad33-4e73-846d-5715aed9f8f7",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I integrate LitElements with Azure OpenAI API for a chat application?",
            "What is the recommended approach for deploying an Azure OpenAI Chat frontend using Vite?",
            "Can I use TypeScript in customizing the frontend for Azure OpenAI chat interactions?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Lit",
            "TypeScript",
            "Vite",
            "Rollup"
        ],
        "negativeMatch": [
            "Azure Cognitive Services",
            "Azure DevOps",
            "Azure SQL Database",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Azure AI Studio Starter Template",
        "description": "This template helps users learn how to use Azure AI Studio. It creates an Azure AI Studio hub, project and required dependent resources including Azure Open AI Service, Cognitive Search and more.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azd-aistudio-starter",
        "tags": [
            "azd",
            "bicep",
            "azure",
            "ai",
            "template",
            "openAI",
            "cognitive",
            "aistudio"
        ],
        "id": "3b2621a8-62cf-418c-9811-916dae3df1d4",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I set up an Azure AI Studio environment using the starter template?",
            "What Azure services are included in the Azure AI Studio Starter Template?",
            "Can I customize the AI model in the Azure AI Studio after deploying the starter template?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Bicep",
            "Azure AI"
        ],
        "negativeMatch": [
            "Azure SQL Database",
            "Azure Cosmos DB",
            "Azure Blob Storage"
        ]
    },
    {
        "title": "Contoso Chat Retail with Azure AI Studio and Promptflow",
        "description": "This sample creates a customer support chat agent for an online retailer called Contoso Outdoors. The solution uses a retrieval-augmented generation pattern to ground responses in the company's product and customer data. Customers can ask questions about the retailer's product catalog, and also get recommendations based on their prior purchases.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/contoso-chat",
        "tags": [
            "python",
            "bicep",
            "azure",
            "prompty",
            "openAI",
            "cosmos-db",
            "prompt-flow",
            "RAG"
        ],
        "id": "892c1998-ab31-4592-a453-8c8ec947df6a",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I link my purchase history to get product recommendations?",
            "What are the latest camping tents available at Contoso Outdoors?",
            "Can I get assistance in finding a product suitable for a hiking trip?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Python",
            "Bicep",
            "Azure AI",
            "Cosmos DB"
        ],
        "negativeMatch": [
            "Azure Kubernetes Service",
            "Azure Functions",
            "Azure Logic Apps",
            "Azure Machine Learning"
        ]
    },
    {
        "title": "HTML sample for Azure App Service",
        "description": "This is a simple HTML/CSS/JS web app that can be deployed to Azure App Service using Git. It is built on the Carousel template by Bootstrap.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/app-service-web-html-get-started",
        "tags": [
            "javascript",
            "azure",
            "app-service",
            "html",
            "web-app",
            "css",
            "git",
            "bootstrap"
        ],
        "id": "92455774-ab16-49b7-968c-e5963cbe880d",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I deploy an HTML/CSS/JS web app to Azure App Service?",
            "Can I use a Git repository to deploy to Azure App Service?",
            "What are the steps for deploying a Bootstrap-based web app on Azure?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "HTML",
            "CSS",
            "JavaScript",
            "Bootstrap"
        ],
        "negativeMatch": [
            "Azure Functions",
            "Azure Virtual Machines",
            "Azure Kubernetes Service"
        ]
    },
    {
        "title": "SAP Deployment Automation Framework",
        "description": "The SAP deployment automation framework on Azure is an open-source orchestration tool for deploying, installing and maintaining SAP environments. You can create infrastructure for SAP landscapes based on SAP HANA and NetWeaver with AnyDB on any of the SAP-supported operating system versions and deploy them into any Azure region. The framework uses Terraform for infrastructure deployment, and Ansible for the operating system and application configuration.",
        "author": "Microsoft",
        "source": "https://github.com/Azure/sap-automation",
        "tags": [
            "SAP",
            "azure",
            "terraform",
            "ansible",
            "deploy",
            "db",
            "automation",
            "framework"
        ],
        "id": "42ed645b-37f7-4468-95f4-ca5a515b63e5",
        "deploymentOptions": [
            "AzD"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How can I automate the deployment of SAP HANA on Azure using the SAP deployment automation framework?",
            "What are the prerequisites for using the SAP deployment automation framework to set up SAP landscapes?",
            "Can the SAP deployment automation framework handle both infrastructure and application configuration for SAP systems on Azure?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Terraform",
            "Ansible"
        ],
        "negativeMatch": [
            "Azure Cosmos DB",
            "Azure SQL Database",
            "Azure DevOps"
        ]
    }
]