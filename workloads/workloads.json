[
    {
        "title": "ChatGPT + Enterprise data with Azure OpenAI and AI Search",
        "description": "A sample app for the Retrieval-Augmented Generation pattern running in Azure, using Azure AI Search for retrieval and Azure OpenAI large language models to power ChatGPT-style and Q&A experiences.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo",
        "tags": [
            "OpenAI",
            "Azure",
            "AI Search",
            "ChatGPT",
            "Enterprise"
        ],
        "id": "88bce5a4-8e70-4c83-a87c-4d68e34eaf7e",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI Service",
            "Azure AI Search",
            "Azure App Service",
            "Azure Blob Storage",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How can I create a ChatGPT-like application using Azure OpenAI for my enterprise data?",
            "What is the Retrieval-Augmented Generation pattern in Azure, and how do I implement it?",
            "How do I set up Azure AI Search to work with large language models for an enterprise chat solution?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "JavaScript",
            ".NET",
            "Java"
        ]
    },
    {
        "title": "Starter - Bicep",
        "description": "A starter template with Bicep as infrastructure provider",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-starter-bicep",
        "tags": [
            "bicep",
            "msft"
        ],
        "id": "6772728c-49cd-48c5-99fb-2f1435b2a62f",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Key Vault",
            "Azure App Service",
            "Azure Functions",
            "Azure Kubernetes Service",
            "Azure Active Directory"
        ],
        "sampleQueries": [
            "How to initialize a Bicep infrastructure template with Azure Developer CLI?",
            "Can I set up continuous deployment for my Azure Bicep project using GitHub Actions?",
            "What steps do I follow to configure application settings in Azure using a Bicep template?"
        ],
        "sourceType": "Azd",
        "tech": []
    },
    {
        "title": "Starter - Terraform",
        "description": "A starter template with Terraform as infrastructure provider",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-starter-terraform",
        "tags": [
            "terraform",
            "msft"
        ],
        "id": "550708e7-b74e-448d-9de8-b60eb57e8208",
        "deploymentOptions": [
            "azcli",
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Key Vault",
            "Azure Kubernetes Service",
            "Azure Functions",
            "Azure Active Directory"
        ],
        "sampleQueries": [
            "How can I start using the Azure Developer CLI Terraform Starter for deploying an application on Azure?",
            "What are the steps to deploy an application code along with infrastructure using Terraform on Azure?",
            "Where can I find Terraform modules for Azure resources as mentioned in the Terraform Starter guide?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Terraform"
        ]
    },
    {
        "title": "WordPress with Azure Container Apps",
        "description": "A blueprint to easily and quickly create and deploy your first scalable and secure WordPress site to Azure, leveraging Azure Container Apps with Azure Database for MariaDb.",
        "author": "Konstantinos Pantos",
        "source": "https://github.com/Azure-Samples/apptemplate-wordpress-on-ACA",
        "tags": [
            "php",
            "javascript",
            "aca",
            "agw",
            "rediscache",
            "monitor",
            "keyvault",
            "bicep",
            "msft"
        ],
        "id": "bdc334e1-d0da-4401-b3a0-ac1b6a03f2d9",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Database for MariaDB",
            "Azure Application Gateway",
            "Azure Key Vault",
            "Azure Monitor",
            "Azure Cache for Redis",
            "Azure Storage",
            "Azure Log Analytics",
            "App Insights"
        ],
        "sampleQueries": [
            "How to deploy WordPress using Azure Container Apps",
            "What are the steps to create a scalable WordPress site on Azure with MariaDB?",
            "Can I integrate Redis Cache with my WordPress application in Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "PHP",
            "JavaScript"
        ]
    },
    {
        "title": "React Web App with C# API and MongoDB",
        "description": "A blueprint for getting a React web app with a C# API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-csharp-cosmos-sql",
        "tags": [
            "dotnetCsharp",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "bicep",
            "msft"
        ],
        "id": "a8b10a54-9384-4fed-b59b-c71ed95c131c",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How to deploy a React web app with C# API and MongoDB on Azure using AzD templates",
            "Can I use the React Web App with C# API and MongoDB blueprint to create a ToDo web app on Azure?",
            "What are the steps for setting up a CI/CD pipeline using Azure Developer CLI for a React and C# application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "Bicep",
            "Typescript",
            "Javascript",
            "Reactjs",
            "HTML"
        ]
    },
    {
        "title": "React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo",
        "tags": [
            "bicep",
            "nodejs",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "12d2cfbe-830b-4b06-aa07-8ce09c372d77",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I deploy a React web app with Node.js API and MongoDB on Azure using Bicep?",
            "What is the architecture of a React web app with Node.js back end and MongoDB using Azure services?",
            "How can I replace the ToDo app code in the Azure React Node.js and MongoDB blueprint with my own code?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Node.js",
            "Typescript",
            "JavaScript",
            "HTML",
            "React"
        ]
    },
    {
        "title": "Static React Web App + Functions with Node.js API and MongoDB",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting static web apps with serverless logic and functionality.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-swa-func",
        "tags": [
            "bicep",
            "swa",
            "functions",
            "nodejs",
            "typescript",
            "javascript",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "appservice",
            "msft"
        ],
        "id": "efbd5a95-560b-409d-8b5c-407d5f15d0e9",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Functions",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How can I deploy a React web app with a Node.js API and MongoDB on Azure?",
            "What are the steps to initialize and deploy a ToDo app using an AzD template with a MongoDB database?",
            "Can I use Bicep templates to provision infrastructure for a React web app with Azure Functions and Node.js backend?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Nodejs",
            "Typescript",
            "HTML",
            "Javascript",
            "Reactjs"
        ]
    },
    {
        "title": "Static React Web App + Functions with Python API and MongoDB",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The frontend, currently a ToDo application, is designed as a placeholder that can easily be removed and replaced with your own frontend code. This architecture is for hosting static web apps with serverless logic and functionality.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo-swa-func",
        "tags": [
            "bicep",
            "swa",
            "functions",
            "python",
            "typescript",
            "javascript",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "appservice",
            "fastapi",
            "msft"
        ],
        "id": "9df1ed02-2102-415e-bf5d-dec8dd6787cb",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Functions",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How to deploy a React.js web app with Python API and MongoDB on Azure?",
            "What is the architecture of a static web app using Azure Functions and Cosmos DB API for MongoDB?",
            "Can I monitor a React web app with Azure Monitor when using FastAPI and Azure Cosmos DB?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Typescript",
            "JavaScript",
            "React",
            "FastAPI",
            "HTML"
        ]
    },
    {
        "title": "React Web App with Python API and MongoDB - Terraform",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Terraform) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo-terraform",
        "tags": [
            "python",
            "typescript",
            "javascript",
            "cosmosdb",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "terraform",
            "appservice",
            "fastapi",
            "msft"
        ],
        "id": "616b6d54-c34b-44dd-b2d3-6557daee156e",
        "deploymentOptions": [
            "azcli",
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How to deploy a React app with Python FastAPI and MongoDB on Azure using Terraform?",
            "What is the best way to start a project with the React Web App with Python API and MongoDB Azure sample?",
            "Can I store my web app's secrets securely on Azure when using the ToDo Python Mongo Terraform blueprint?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Typescript",
            "Javascript",
            "Reactjs",
            "Terraform",
            "FastAPI",
            "HTML"
        ]
    },
    {
        "title": "React Web App with Node.js API and MongoDB - Terraform",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Terraform) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-terraform",
        "tags": [
            "nodejs",
            "typescript",
            "javascript",
            "cosmosdb",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "terraform",
            "appservice",
            "msft"
        ],
        "id": "a1e493de-1f5b-4cc1-b9e1-18b07f073abe",
        "deploymentOptions": [
            "azcli",
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How can I deploy a React web app with Node.js API and MongoDB on Azure using Terraform?",
            "What are the steps to initialize and deploy a ToDo app using the Azure Developer CLI?",
            "Is there a blueprint available for setting up a React web app with Azure Cosmos DB for MongoDB storage?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "Terraform",
            "Typescript",
            "HTML",
            "Javascript",
            "Reactjs"
        ]
    },
    {
        "title": "React Web App with Python API and MongoDB",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo",
        "tags": [
            "bicep",
            "python",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "fastapi",
            "msft"
        ],
        "id": "07b915d6-29cc-45ee-a973-c338de02310f",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How can I deploy a React app with a Python API on Azure?",
            "What are the steps to start with the React Web App with Python API and MongoDB blueprint on Azure?",
            "How do I use Azure Developer CLI to set up a React web app with FastAPI backend and MongoDB?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Bicep",
            "Typescript",
            "JavaScript",
            "Reactjs",
            "FastAPI"
        ]
    },
    {
        "title": "Containerized React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React web app with a Node.js API and a MongoDB database onto Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running containerized apps or microservices on a serverless platform   This architecture is for running containerized microservices without managing the servers.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-aca",
        "tags": [
            "bicep",
            "nodejs",
            "typescript",
            "javascript",
            "appservice",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "aca",
            "msft"
        ],
        "id": "3bdd6e9a-60f5-4189-9caa-b5859d2c33a4",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault",
            "Azure Container Apps",
            "Azure Container Registry"
        ],
        "sampleQueries": [
            "How can I deploy a containerized React web app with Node.js API on Azure?",
            "What are the steps to use Azure Cosmos DB API for MongoDB with a React and Node.js application?",
            "How do I set up Azure Monitor for a Node.js API and MongoDB application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Node.js",
            "Typescript",
            "HTML",
            "Javascript",
            "React"
        ]
    },
    {
        "title": "Containerized React Web App with Python API and MongoDB",
        "description": "A blueprint for getting a React.js web app with Python (FastAPI) API and a MongoDB API in Cosmos database onto Azure. The frontend, currently a ToDo application, is designed as a placeholder that can easily be removed and replaced with your own frontend code. This architecture is for running containerized apps or microservices on a serverless platform.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-python-mongo-aca",
        "tags": [
            "bicep",
            "python",
            "typescript",
            "javascript",
            "aca",
            "cosmosdb",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "fastapi",
            "msft"
        ],
        "id": "b808d61c-f3af-4fa6-842d-39710b893b81",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How to deploy a React web app with Python API and MongoDB on Azure?",
            "What is the architecture of a containerized React web app with FastAPI and MongoDB on Azure?",
            "How to monitor and log a React web application using Azure Monitor?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Python",
            "Typescript",
            "Javascript",
            "Reactjs",
            "FastAPI",
            "HTML"
        ]
    },
    {
        "title": "React Web App with C# API and SQL Database ",
        "description": "A blueprint for getting a React web app with a C# API and a SQL database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-csharp-sql",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "typescript",
            "javascript",
            "appservice",
            "azuresql",
            "monitor",
            "keyvault",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "1a0d0c97-261a-4bce-a699-f72b83e5bcea",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure SQL Database",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I get started with a React web app using a C# API and SQL Database on Azure?",
            "What is the process to deploy a React app with C# backend and Azure SQL using Azure Developer CLI?",
            "Can I find a sample React and C# project integrated with Azure services like App Service, SQL Database, Monitor, and Key Vault?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#",
            "Typescript",
            "Javascript",
            "Reactjs",
            "HTML",
            "ASP.NET Core"
        ]
    },
    {
        "title": "React Web App with Java API and MongoDB ",
        "description": "A blueprint for getting a React.js web app with a Java API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-java-mongo",
        "tags": [
            "bicep",
            "java",
            "typescript",
            "appservice",
            "cosmosdb",
            "keyvault",
            "monitor",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "c1af6086-4f34-4350-aea5-81e103d7e3eb",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How can I deploy a React web app with Java API and MongoDB on Azure?",
            "What steps are required to set up a ToDo app using the React Web App with Java API and MongoDB blueprint?",
            "Is there a GitHub repository available with a template for setting up a React app with Java backend and MongoDB on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Java",
            "Typescript",
            "HTML",
            "Reactjs"
        ]
    },
    {
        "title": "Containerized React Web App with Java API and MongoDB",
        "description": "A blueprint for getting a React web app with a Java API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running containerized apps or microservices on a serverless platform.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-java-mongo-aca",
        "tags": [
            "bicep",
            "java",
            "typescript",
            "appservice",
            "cosmosdb",
            "keyvault",
            "monitor",
            "mongodb",
            "reactjs",
            "msft"
        ],
        "id": "f5d0f91a-0ebc-4fe4-86cd-6414f810d54d",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault",
            "Azure Container Apps",
            "Azure Container Registry",
            "Azure Pipelines"
        ],
        "sampleQueries": [
            "How do I deploy a containerized React web app with a Java API on Azure using the Azure Developer CLI?",
            "What steps are required to set up a MongoDB database with Azure Cosmos DB for a containerized web app?",
            "Can I use Bicep templates to automate the infrastructure setup for a React application with Java API back end on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Bicep",
            "Typescript",
            "HTML",
            "Javascript",
            "Reactjs"
        ]
    },
    {
        "title": "Static React Web App + Functions with C# API and SQL Database",
        "description": "A blueprint for getting a React web app with a C# API and a SQL database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting static web apps with serverless logic and functionality.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-csharp-sql-swa-func",
        "tags": [
            "bicep",
            "swa",
            "functions",
            "dotnetCsharp",
            "typescript",
            "javascript",
            "monitor",
            "keyvault",
            "reactjs",
            "appservice",
            "azuresql",
            "msft"
        ],
        "id": "262a5d45-4d80-4aaa-8fba-f27d2876dcdb",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Functions",
            "Azure SQL Database",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I deploy a Static React Web App with a C# API and SQL Database using Azure?",
            "What is the process to initialize and deploy a ToDo web app using Azure Developer CLI?",
            "Can I monitor and log a Static React Web App with Azure Functions and Azure SQL Database?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#",
            "Typescript",
            "Javascript",
            "Reactjs",
            "HTML"
        ]
    },
    {
        "title": "Kubernetes React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React.js web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running Kubernetes clusters without setting up the control plane.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-aks",
        "tags": [
            "bicep",
            "nodejs",
            "typescript",
            "javascript",
            "mongodb",
            "monitor",
            "keyvault",
            "reactjs",
            "appservice",
            "cosmosdb",
            "aks",
            "msft"
        ],
        "id": "93b22870-f071-4104-ada9-ba45e71329a1",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How to deploy a Kubernetes React web app with a Node.js API and MongoDB using Azure Developer CLI",
            "What is the architecture for a ToDo app with MongoDB using Azure services?",
            "Can I use Bicep for Infrastructure as Code when setting up a React app with Kubernetes on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Node.js",
            "Typescript",
            "Javascript",
            "React.js",
            "HTML"
        ]
    },
    {
        "title": "Static React Web App with Java API and PostgreSQL",
        "description": "A blueprint for getting a React web app with a Java API and a Azure Database for PostgreSQL - Flexible Server on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for hosting web apps and APIs without worrying about the infrastructure.",
        "author": "Yi Liu",
        "source": "https://github.com/Azure-Samples/ASA-Samples-Web-Application",
        "tags": [
            "bicep",
            "java",
            "nodejs",
            "spring",
            "webapps",
            "azurespringapps",
            "azuredb-postgreSQL",
            "msft"
        ],
        "id": "757881c8-74ad-4f62-9633-7af22a2be3aa",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Spring Apps",
            "Azure Database for PostgreSQL"
        ],
        "sampleQueries": [
            "How can I deploy a React web app with Java API on Azure using Azure Developer CLI?",
            "What are the prerequisites for setting up a Static React Web App with Java API and PostgreSQL on Azure?",
            "How do I integrate Azure Database for PostgreSQL with a React and Java application on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Bicep",
            "Typescript",
            "HTML",
            "Node.js",
            "Spring",
            "React"
        ]
    },
    {
        "title": "ChatGPT Plugin using Python (FastAPI)",
        "description": "This is a quickstart for creating a ChatGPT Plugin using Python and Azure.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/openai-plugin-fastapi",
        "tags": [
            "bicep",
            "python",
            "aca",
            "cosmosdb",
            "monitor",
            "fastapi",
            "ai",
            "msft"
        ],
        "id": "e64314dd-aa61-4175-959d-ffa624b0423d",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Cosmos DB",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How can I deploy a ChatGPT plugin on Azure using Azure Developer CLI?",
            "What are the steps to create a ChatGPT plugin with Python and FastAPI?",
            "Can I use GitHub Codespaces for developing a ChatGPT plugin to run on Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "FastAPI"
        ]
    },
    {
        "title": "ChatGPT + Enterprise Data with Azure OpenAI and Cognitive Search",
        "description": "A sample app for the Retrieval-Augmented Generation pattern running in Azure, using Azure Cognitive Search for retrieval and Azure OpenAI large language models to power ChatGPT-style and Q&A experiences.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo-csharp",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "aks",
            "kubernetes",
            "aca",
            "cognitivesearch",
            "openai",
            "chatgpt",
            "rediscache",
            "ai",
            "msft"
        ],
        "id": "fc3c956d-a8d3-4d60-87f6-d6b442f64602",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Cognitive Search",
            "Azure OpenAI",
            "Azure Container Apps",
            "Azure Blob Storage",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How to set up a ChatGPT-style Q&A app using Azure OpenAI and Cognitive Search",
            "What steps are involved in deploying a .NET ChatGPT application with Azure OpenAI?",
            "Can I integrate Azure Cognitive Search with ChatGPT to answer questions from enterprise data?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#",
            "HTML",
            "ASP.NET Core",
            "Blazor"
        ]
    },
    {
        "title": "Simple Chat Application using Azure OpenAI",
        "description": "A sample chat app that uses Python and the Flask framework to stream ChatGPT completions as server-sent events to a simple frontend.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/chatgpt-quickstart",
        "tags": [
            "bicep",
            "python",
            "openai",
            "chatgpt",
            "ai",
            "flask",
            "aca",
            "msft"
        ],
        "id": "3f85f8e5-619f-495b-bf49-c5bd6edaa350",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Container Apps",
            "Azure Container Registry",
            "Azure Log Analytics"
        ],
        "sampleQueries": [
            "How can I set up a simple chat app using Azure OpenAI and Flask in Python?",
            "What are the steps to deploy a Python chat application to Azure Container Apps?",
            "Can I integrate my Python chat application with local LLMs during development?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Flask",
            "Quart",
            "Openai"
        ]
    },
    {
        "title": "Spring ChatGPT Application using Azure OpenAI on Azure Spring Apps",
        "description": "A sample that uses Java Spring framework to build ChatGPT-style application running in Azure Spring Apps.",
        "author": "Yi Liu",
        "source": "https://github.com/Azure-Samples/spring-chatgpt-sample",
        "tags": [
            "bicep",
            "java",
            "openai",
            "chatgpt",
            "ai",
            "blobstorage",
            "azurespringapps",
            "msft"
        ],
        "id": "27170e89-7227-4bd0-a593-9a292498366f",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Spring Apps",
            "Azure Blob Storage",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How can I deploy a Spring ChatGPT application using Azure OpenAI on Azure Spring Apps?",
            "What are the steps to run the Spring ChatGPT sample with Azure Developer CLI?",
            "How do I integrate my private data with a ChatGPT-like application in Azure Spring Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Bicep",
            "Javascript",
            "Html",
            "OpenAI"
        ]
    },
    {
        "title": "Enterprise-Grade Reference Architecture for JavaScript",
        "description": "A reference architecture and components for building enterprise-grade modern composable frontends (or micro-frontends) and cloud-native applications. It is a collection of best practices, architecture patterns, and functional components that can be used to build and deploy modern JavaScript applications to Azure.",
        "author": "JavaScript Advocacy Team, Natalia Venditto",
        "source": "https://github.com/Azure-Samples/contoso-real-estate",
        "tags": [
            "bicep",
            "javascript",
            "swa",
            "aca",
            "keyvault",
            "blobstorage",
            "azuredb-postgreSQL",
            "cosmosdb",
            "apim",
            "enterprisepatterns",
            "msft",
            "popular"
        ],
        "id": "25a3dda0-8840-44dc-b850-4f2468991ecb",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Container Apps",
            "Azure Key Vault",
            "Azure Blob Storage",
            "Azure Database for PostgreSQL",
            "Azure Cosmos DB",
            "Azure Functions",
            "Azure API Management"
        ],
        "sampleQueries": [
            "What is the best architecture for building modern JavaScript cloud-native applications?",
            "How can I deploy an enterprise-grade micro-frontend application on Azure?",
            "What are the best practices for integrating OpenAI chatbot with a JavaScript application in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Javascript",
            "Typescript",
            "Nodejs",
            "Bicep",
            "Angular",
            "Next.js",
            "Strapi",
            "Fastify"
        ]
    },
    {
        "title": "Python (Django) Web App with PostgreSQL in VNet",
        "description": "A restaurants review web app that uses whitenoise for static assets and PostgreSQL for the database. Ready for deployment on App Service with a PostgreSQL Flexible Server inside a VNet.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/msdocs-django-postgresql-sample-app",
        "tags": [
            "python",
            "django",
            "webapps",
            "azuredb-postgreSQL",
            "appservice",
            "vnets",
            "msft",
            "popular"
        ],
        "id": "aeb56402-db75-42d0-8d21-839d9d1e8158",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Database for PostgreSQL",
            "Azure Virtual Network",
            "Azure Redis Cache"
        ],
        "sampleQueries": [
            "How can I deploy a Python Django web app with PostgreSQL on Azure using AzD?",
            "What is the process for adding Azure Redis Cache to a Django web application?",
            "Are there any examples of Python (Django) web apps in Azure that integrate with Azure Database for PostgreSQL?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Django",
            "HTML",
            "Psycopg-binary",
            "Python-dotenv",
            "Whitenoise",
            "Django-redis"
        ]
    },
    {
        "title": "Python (Django) Web App with PostgreSQL via Azure Container Apps",
        "description": "A space tourism web app that uses PostgreSQL for the database. The web app is containerize and deploy with Azure Container Apps with secrets managed by Azure Key Vault",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-django-postgres-aca",
        "tags": [
            "python",
            "django",
            "aca",
            "azuredb-postgreSQL",
            "bicep",
            "msft"
        ],
        "id": "1eab6419-b143-41d3-9b86-c8aeb9158fda",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Key Vault",
            "Azure Database for PostgreSQL"
        ],
        "sampleQueries": [
            "How do I deploy a Django web app with PostgreSQL on Azure Container Apps?",
            "What are the steps to set up a space tourism web application using Azure Container Apps and PostgreSQL?",
            "How can I manage secrets with Azure Key Vault when deploying a Python Django app on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Django",
            "HTML"
        ]
    },
    {
        "title": "Python (Flask) Web App with PostgreSQL in VNet",
        "description": "A restaurants review web app with a PostgreSQL database, written in the Python Flask framework plus SQL-Alchemy plus Alembic for database interactions. Ready for deployment on App Service with a PostgreSQL Flexible Server inside a VNet.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/msdocs-flask-postgresql-sample-app",
        "tags": [
            "python",
            "webapps",
            "azuredb-postgreSQL",
            "appservice",
            "vnets",
            "flask",
            "msft",
            "popular"
        ],
        "id": "6f229853-0a89-4b5c-8e7b-6fcca519147b",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Database for PostgreSQL",
            "Azure Virtual Network"
        ],
        "sampleQueries": [
            "How can I deploy a Python Flask web app with PostgreSQL on Azure?",
            "Is there a Flask and Azure PostgreSQL example app that I can start with for my project?",
            "What steps should I follow to develop and deploy a restaurants review app using Flask and Azure services?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Flask",
            "SQLAlchemy",
            "Alembic",
            "psycopg2",
            "WTForms"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub C# ACA ServiceBus",
        "description": "A complete microservice application featuring Dapr Pub-Sub, deployed to Azure Container Apps and Azure Service Bus Topics with dead-lettering support.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-csharp-servicebus",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "aca",
            "dapr",
            "servicebus",
            "msft"
        ],
        "id": "fc959a8e-de77-48a5-b01c-d3effdb5265d",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Service Bus"
        ],
        "sampleQueries": [
            "How can I implement a microservices application with Dapr Pub-Sub in Azure?",
            "What are the steps to deploy a microservices app with Azure Container Apps and Service Bus using Azure Dev CLI?",
            "How to build a publisher and subscriber microservice using Dapr and .NET in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "Bicep",
            "Dapr"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub Python ACA ServiceBus",
        "description": "A complete microservice application featuring Dapr Pub-Sub, deployed to Azure Container Apps and Azure Service Bus Topics with dead-lettering support.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-python-servicebus",
        "tags": [
            "bicep",
            "python",
            "aca",
            "dapr",
            "servicebus",
            "msft"
        ],
        "id": "3689e30c-5ea3-4c69-9a3c-e34ee217a770",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Service Bus"
        ],
        "sampleQueries": [
            "How do I create a publisher and subscriber microservices using Dapr Pub-Sub with Python?",
            "What are the steps to deploy microservices with Dapr on Azure Container Apps using Azure Service Bus?",
            "Can you show me how to integrate Dapr Pub-Sub in microservices on Azure for asynchronous communication?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Bicep",
            "Dapr"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub Node.js ACA ServiceBus",
        "description": "A complete microservice application featuring Dapr Pub-Sub, deployed to Azure Container Apps and Azure Service Bus Topics with dead-lettering support.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-nodejs-servicebus",
        "tags": [
            "bicep",
            "javascript",
            "nodejs",
            "aca",
            "dapr",
            "servicebus",
            "msft"
        ],
        "id": "17c7f10c-45ff-4f1b-bba8-9e98cf1a8d54",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Service Bus"
        ],
        "sampleQueries": [
            "How to deploy a microservices application with Dapr and Azure Service Bus using the Azure Developer CLI",
            "What are the necessary steps to run a Node.js microservices app with Dapr Pub-Sub pattern on Azure?",
            "Can I use Azure Container Apps to set up a Node.js publisher and subscriber microservice with dead-lettering"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Javascript",
            "Nodejs"
        ]
    },
    {
        "title": "Microservices App - Dapr Bindings Cron C# ACA PostgreSQL",
        "description": "Create microservice to demonstrate Dapr's bindings API to work with external systems as inputs and outputs. The service listens to input binding events from a system CRON and then outputs the contents of local data to a PostgreSQL output binding.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/bindings-dapr-csharp-cron-postgres",
        "tags": [
            "dapr",
            "dotnetCsharp",
            "azuredb-postgreSQL",
            "aca",
            "msft"
        ],
        "id": "a3c9e1b9-b2fc-4957-a5e2-bd3a4fd9f601",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Database for PostgreSQL",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How to work with Dapr bindings using C# for event-driven microservices?",
            "What are the steps to deploy a microservices app with PostgreSQL and Dapr cron bindings on Azure?",
            "Can I use the Azd templates for setting up a C# microservice with Dapr bindings for system CRON inputs and PostgreSQL?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "C#",
            "PostgreSQL"
        ]
    },
    {
        "title": "Microservices App - Dapr Bindings Cron Python ACA PostgreSQL",
        "description": "Create a microservice app to demonstrate Dapr's bindings API to work with external systems as inputs and outputs. The service listens to input binding events from a system CRON and then outputs the contents of local data to a postgreSQL output binding.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/bindings-dapr-python-cron-postgres",
        "tags": [
            "dapr",
            "python",
            "azuredb-postgreSQL",
            "aca",
            "msft"
        ],
        "id": "e2515292-52ac-4d22-b87b-d8c3fd9219fa",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Database for PostgreSQL",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How can I use Dapr bindings with a Python microservices application?",
            "Is there a guide to integrate CRON events with Azure Container Apps using Dapr?",
            "What steps are involved in deploying a Dapr cron binding app to Azure PostgreSQL?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Python",
            "PostgreSQL"
        ]
    },
    {
        "title": "Microservices App - Dapr Bindings Cron Node.js ACA PostgreSQL",
        "description": "Create a microservice app to demonstrate Dapr's bindings API to work with external systems as inputs and outputs. The service listens to input binding events from a system CRON and then outputs the contents of local data to a postgreSQL output binding.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/bindings-dapr-nodejs-cron-postgres",
        "tags": [
            "dapr",
            "nodejs",
            "azuredb-postgreSQL",
            "javascript",
            "aca",
            "msft"
        ],
        "id": "21a01a78-5c09-4fae-b42c-5b5793246560",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Database for PostgreSQL",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How do I use Dapr bindings with CRON in a Node.js application on Azure Container Apps?",
            "Can I integrate Node.js microservices with PostgreSQL using Dapr bindings?",
            "What are the steps to deploy a CRON job driven microservice on Azure using Dapr and Node.js?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Nodejs",
            "Javascript",
            "PostgreSQL"
        ]
    },
    {
        "title": "Microservices App - Dapr Service Invoke Node.js ACA",
        "description": "Create two microservices that communicate using Dapr's Service Invocation API. The Service Invocation API enables your applications to communicate reliably and securely by leveraging auto-mTLS and built-in retries.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/svc-invoke-dapr-nodejs",
        "tags": [
            "dapr",
            "nodejs",
            "aca",
            "msft"
        ],
        "id": "a98c5bd6-a080-44cf-a10c-5fcbf6588f30",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How do I use Dapr Service Invocation with Node.js in Azure Container Apps?",
            "What are the steps to establish communication between microservices using Dapr in Node.js?",
            "How to deploy a Node.js microservices application with Dapr on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Nodejs",
            "Javascript",
            "Bicep"
        ]
    },
    {
        "title": "Microservices App - Dapr Service Invoke Python ACA",
        "description": "Create two microservices that communicate using Dapr's Service Invocation API. The Service Invocation API enables your applications to communicate reliably and securely by leveraging auto-mTLS and built-in retries.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/svc-invoke-dapr-python",
        "tags": [
            "dapr",
            "python",
            "aca",
            "msft"
        ],
        "id": "46306dfe-017e-4d99-9240-e48309ba3726",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How do I implement microservice communication using Dapr's Service Invocation API in Python?",
            "What steps are involved in deploying a Python app with auto-mTLS and retries on Azure Container Apps?",
            "Can you guide me on setting up secure microservices with Dapr on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Python"
        ]
    },
    {
        "title": "Microservices App - Dapr Service Invoke C# ACA",
        "description": "Create two microservices that communicate using Dapr's Service Invocation API. The Service Invocation API enables your applications to communicate reliably and securely by leveraging auto-mTLS and built-in retries.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/svc-invoke-dapr-csharp",
        "tags": [
            "dapr",
            "dotnetCsharp",
            "aca",
            "msft"
        ],
        "id": "b9afbe11-5351-4a6d-bd8a-77cf44a24e4f",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How can I use Dapr's Service Invocation API for microservice communication in C#?",
            "What steps should I follow to implement secure microservices communication with auto-mTLS using Azure Container Apps?",
            "How to deploy a microservices application using Azure's Dapr Service Invocation on Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "C#"
        ]
    },
    {
        "title": "ChatGPT and Enterprise data with Azure OpenAI and Cognitive Search",
        "description": "Demonstration of how to leverage Azure OpenAI and Cognitive Search to enable Information Search and Discovery over organizational content.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo",
        "tags": [
            "openai",
            "chatgpt",
            "cognitivesearch",
            "python",
            "typescript",
            "bicep",
            "nodejs",
            "ai",
            "msft",
            "popular"
        ],
        "id": "eebc5dce-43e7-4fc3-8b91-13573c8076df",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Cognitive Search",
            "Azure AI Document Intelligence",
            "Azure Blob Storage",
            "Azure Monitor",
            "Azure App Service",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How to build a ChatGPT-like app using Azure OpenAI and Cognitive Search",
            "What is the process to index and retrieve enterprise data with Azure Cognitive Search?",
            "Can I integrate my organizational content with a ChatGPT-style interface using Python and TypeScript on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "JavaScript",
            ".NET",
            "Java"
        ]
    },
    {
        "title": "FastAPI on Azure Functions",
        "description": "A simple FastAPI app deployed to Azure Functions. Can also be run and debugged locally with the Azure Functions Core Tool emulator.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/fastapi-on-azure-functions",
        "tags": [
            "python",
            "fastapi",
            "functions",
            "msft"
        ],
        "id": "ec4855aa-505c-43b2-8bfd-3600c831d05a",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions"
        ],
        "sampleQueries": [
            "How do I deploy a FastAPI app to Azure Functions?",
            "What are the prerequisites for running FastAPI with Azure Functions?",
            "Can I test the FastAPI Azure Function locally before deploying?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "FastAPI"
        ]
    },
    {
        "title": "Spring PetClinic - Java Spring MySQL",
        "description": "Spring PetClinic application using a set of Azure solutions. Azure App Service for app hosting, Azure Database for MySQL for storage, Azure Key Vault for securing secret and Azure Application Insights for monitoring and logging.",
        "author": "Miller Wang",
        "source": "https://github.com/Azure-Samples/spring-petclinic-java-mysql",
        "tags": [
            "java",
            "appservice",
            "azuresql",
            "monitor",
            "keyvault",
            "appinsights",
            "bicep",
            "spring",
            "thymeleaf",
            "msft",
            "popular"
        ],
        "id": "a10a1a26-6f9a-4ca8-8b9b-e6a99a641d08",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Database for MySQL",
            "Azure Key Vault",
            "Azure Monitor",
            "Azure Application Insights"
        ],
        "sampleQueries": [
            "How to set up Azure App Service hosting for a Java Spring application with MySQL",
            "How can I use Azure Key Vault to secure secrets in a Spring PetClinic app?",
            "What steps are involved in monitoring a Spring PetClinic application using Azure Application Insights?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "Thymeleaf"
        ]
    },
    {
        "title": "Event Driven Java Application with Azure Service Bus on Azure Spring Apps",
        "description": "A complete event-driven application that includes everything you need to build, deploy, and monitor an Azure solution. ",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/ASA-Samples-Event-Driven-Application",
        "tags": [
            "java",
            "servicebus",
            "monitor",
            "keyvault",
            "azurespringapps",
            "bicep",
            "spring",
            "msft"
        ],
        "id": "e18d18a8-e26f-4be3-b1fb-cee3acd730ed",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Spring Apps",
            "Azure Service Bus",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I deploy an Event Driven Java Application using Azure Service Bus with Azure Spring Apps?",
            "What are the steps to monitor an Azure Spring application with integrated Service Bus and Azure Monitor?",
            "Can I use Key Vault to store secrets for an event-driven application on Azure Spring Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Bicep",
            "Spring"
        ]
    },
    {
        "title": "SAP Cloud SDK on Azure App Service Quickstart (TypeScript)",
        "description": "This repos serves as quick-start project showcasing SAP Cloud SDK for JavaScript OData consumption running on Azure App Services. Its primary purpose is to set you up for success for your SAP extension project on Azure and reduce the lead time to your first successful deployment as much as possible with developer friendly commands.",
        "author": "Martin Pankraz, Christian Lechner",
        "source": "https://github.com/Azure-Samples/app-service-javascript-sap-cloud-sdk-quickstart",
        "tags": [
            "typescript",
            "nodejs",
            "bicep",
            "webapps",
            "apim",
            "keyvault",
            "appinsights",
            "nestjs",
            "sap",
            "sapcloudsdk",
            "msft"
        ],
        "id": "85052c4b-9602-421e-a654-573a6d3b429f",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure API Management",
            "Azure Key Vault",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How to deploy SAP Cloud SDK on Azure App Service using TypeScript",
            "What are the steps to consume OData with SAP Cloud SDK in Azure App Services?",
            "How to set up Azure API Management integration for SAP APIs"
        ],
        "sourceType": "Azd",
        "tech": [
            "TypeScript",
            "Node.js",
            "NestJS",
            "SAP Cloud SDK for JavaScript"
        ]
    },
    {
        "title": "Azure Functions - Text Summarization using AI Cognitive Language Service (C#-Isolated)",
        "description": "This sample shows how to take text documents as a input via BlobTrigger, does Text Summarization processing using the AI Congnitive Language service, and then outputs to another text document using BlobOutput binding.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-csharp-ai-textsummarize",
        "tags": [
            "functions",
            "cognitivesearch",
            "dotnetCsharp",
            "azureai",
            "ai",
            "msft"
        ],
        "id": "abdec121-45cb-4e73-a005-d944579a8db0",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure Cognitive Search",
            "Azure AI"
        ],
        "sampleQueries": [
            "How to perform text summarization with Azure Functions and AI Cognitive Language Service?",
            "What are the steps to process text documents using BlobTrigger and AI Cognitive Services in Azure?",
            "Can I use C# to trigger text summarization with Azure Cognitive Language Services in Azure Functions?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#"
        ]
    },
    {
        "title": "Azure Functions - Text Summarization using AI Cognitive Language Service (Python v2 Function)",
        "description": "This sample shows how to take text documents as a input via BlobTrigger, does Text Summarization processing using the AI Congnitive Language service, and then outputs to another text document using BlobOutput binding.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-python-ai-textsummarize",
        "tags": [
            "functions",
            "cognitivesearch",
            "python",
            "azureai",
            "ai",
            "msft"
        ],
        "id": "df35a2f8-da36-43b2-92df-aba105170e8c",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure Cognitive Search",
            "AI Services"
        ],
        "sampleQueries": [
            "How do I create a BlobTrigger in Azure Functions for text summarization?",
            "Can Azure AI Cognitive Language Service be used for summarizing text in blobs with Python?",
            "What are the steps to set up a Python Azure Function that summarizes text documents?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python"
        ]
    },
    {
        "title": "Reliable Web App Pattern for .NET",
        "description": "A multi-region enterprise web app with a 99.9% SLO and a focus on 12-factor apps and the well-architected framework. The sample app creates a concert booking application.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure/reliable-web-app-pattern-dotnet",
        "tags": [
            "dotnetCsharp",
            "bicep",
            "appservice",
            "keyvault",
            "frontdoor",
            "azuresql",
            "appinsights",
            "blobstorage",
            "webapps",
            "enterprisepatterns",
            "msft"
        ],
        "id": "33da45cd-d26c-42c1-8b0a-ae4b79847dde",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure Key Vault",
            "Azure Front Door",
            "Azure SQL Database",
            "Azure Blob Storage",
            "Azure Cache for Redis",
            "Microsoft Entra",
            "Azure Private DNS",
            "Azure Application Insights",
            "Azure App Configuration"
        ],
        "sampleQueries": [
            "How to implement a multi-region .NET web app with a high SLO using Azure services?",
            "What are the best practices for building a scalable and reliable .NET web application in Azure?",
            "How can I migrate my on-premises .NET web app to Azure with the reliable web app pattern?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "ASP.NET"
        ]
    },
    {
        "title": "React Component Toolkit with ChatGPT and OpenAI ",
        "description": "A sample demo for building and testing react components and includes a set of unique features including AI component generation and automatic conversion to Azure APIM Widgets",
        "author": "Jenny Chen",
        "source": "https://github.com/Azure-Samples/react-component-toolkit-openai-demo",
        "tags": [
            "bicep",
            "openai",
            "chatgpt",
            "ai",
            "apim",
            "reactjs",
            "typescript",
            "javascript",
            "msft"
        ],
        "id": "8d6366f6-78e8-4339-8073-ab55f900ecbd",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How can I create React components using ChatGPT with the React Component Toolkit?",
            "What is the process for converting React components into Azure APIM Widgets?",
            "How to set up the React Component Toolkit with Azure OpenAI for my project?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Reactjs",
            "Typescript",
            "Javascript",
            "CSS"
        ]
    },
    {
        "title": "Java Spring Apps with Azure OpenAI",
        "description": "AI Shopping Cart is a sample app template that supercharges your shopping experience with the power of AI. It leverages Azure OpenAI and Azure Spring Apps to build a recommendation engine that is not only scalable, resilient, and secure, but also personalized to your needs.",
        "author": "Pierre Malarme",
        "source": "https://github.com/Azure-Samples/app-templates-java-openai-springapps",
        "tags": [
            "spring",
            "openai",
            "ai",
            "aca",
            "azurespringapps",
            "azuredb-postgreSQL",
            "monitor",
            "reactjs",
            "bicep",
            "msft"
        ],
        "id": "1376d15a-343c-40d6-aaf3-38902d78c5ea",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Spring Apps",
            "Azure Container Apps",
            "Azure Container Registry",
            "Azure Monitor",
            "Azure Database for PostgreSQL"
        ],
        "sampleQueries": [
            "How to integrate Azure OpenAI with Java Spring applications to build a recommendation engine?",
            "What steps should I follow to deploy AI Shopping Cart using Azure Spring Apps and OpenAI on Azure?",
            "Can I create an Azure shopping cart application with nutrition analysis and recipe generation using OpenAI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Spring",
            "OpenAI",
            "Java",
            "Typescript",
            "Bicep",
            "HTML",
            "Reactjs"
        ]
    },
    {
        "title": "Java - ChatGPT + Enterprise data with Azure OpenAI and Cognitive Search",
        "description": "This repo is the java conversion of the well known chatGPT + Enterprise data code sample originally developed in python",
        "author": "Davide Antelmo",
        "source": "https://github.com/Azure-Samples/azure-search-openai-demo-java",
        "tags": [
            "java",
            "spring",
            "openai",
            "ai",
            "appservice",
            "cognitivesearch",
            "semantickernel",
            "reactjs",
            "bicep",
            "msft"
        ],
        "id": "554ba579-08d0-49ac-9c12-01087c0096f6",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Cognitive Search",
            "Azure App Service",
            "Azure Container Apps",
            "Azure Kubernetes Service",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How to integrate Java with Azure OpenAI for enterprise data applications?",
            "What are the steps to deploy a ChatGPT-like app using Java on Azure Kubernetes Service?",
            "Can I create a chat interface with private documents using Java and Azure Cognitive Search?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Java",
            "Spring",
            "OpenAI",
            "Reactjs"
        ]
    },
    {
        "title": "ChatGPT and RAG with Azure OpenAI and Cognitive Search for JavaScript",
        "description": "A reference sample to build Retrieval Augmented Generation applications using Azure Cognitive Search and Azure OpenAI.",
        "author": "JavaScript Advocacy Team, Natalia Venditto, Shibani Basava",
        "source": "https://github.com/Azure-Samples/azure-search-openai-javascript",
        "tags": [
            "ai",
            "bicep",
            "chatgpt",
            "cognitivesearch",
            "javascript",
            "nodejs",
            "openai",
            "typescript",
            "webcomponents",
            "microfrontend",
            "msft"
        ],
        "id": "f343a991-c4a1-4edb-bd4f-c0b05aadf26e",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Cognitive Search"
        ],
        "sampleQueries": [
            "How can I create a ChatGPT app with Azure OpenAI and Azure Cognitive Search in JavaScript?",
            "What are the steps to set up a Retrieval-Augmented Generation application using Azure services?",
            "How do I integrate Azure OpenAI's gpt-3.5-turbo model with Azure AI Search for a web application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "JavaScript",
            "Nodejs",
            "TypeScript"
        ]
    },
    {
        "title": "Bicep template to bootstrap Azure Deployment Environments",
        "description": "A template to deploy Azure DevCenter with the minimun configuration to start using Azure Deployment Environments and supercharge your platform engineering story. Infrastructure as Code (written in Bicep) will get you started quickly to enable developers to self-serve environments via the Developer Portal, Azure CLI or CI/CD pipelines.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-deployment-environments",
        "tags": [
            "bicep",
            "platformengineering",
            "ade",
            "msft"
        ],
        "id": "7e5276d7-b80c-4aa6-b8e6-750939a42ecd",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure DevCenter",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I get started with Infrastructure as Code using the Bicep template for Azure Deployment Environments?",
            "What are the prerequisites for deploying Azure DevCenter using an Azd template?",
            "Can I customize environment types and projects in Azure DevCenter after deploying with the provided Bicep template?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep"
        ]
    },
    {
        "title": "Azure OpenAI Conference Session Recommender",
        "description": "Build a recommender using OpenAI, Azure Functions, Azure Static Web Apps, Azure SQL DB, Data API builder and Text Embeddings",
        "author": "Davide Mauri",
        "source": "https://github.com/Azure-Samples/azure-sql-db-session-recommender",
        "tags": [
            "msft",
            "reactjs",
            "appservice",
            "functions",
            "azuresql",
            "swa",
            "appinsights",
            "openai",
            "azureai",
            "enterprisepatterns",
            "ai"
        ],
        "id": "8e354d6e-1957-4441-80d6-0d350fe8bea5",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure OpenAI",
            "Azure Functions",
            "Azure SQL Database",
            "Azure Application Insights"
        ],
        "sampleQueries": [
            "How do I set up an Azure OpenAI conference session recommender?",
            "What steps are necessary to deploy a text embedding solution using Azure SQL and OpenAI?",
            "Can I implement a vector similarity search with Azure SQL Database and Azure OpenAI for conference session recommendations?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "SQL",
            "T-SQL",
            "Javascript",
            "HTML",
            "Bicep"
        ]
    },
    {
        "title": "Microservices App - Dapr PubSub Java AKS",
        "description": "Demonstrate event-driven communication between microservices by leveraging the pub/sub messaging architecture using Dapr for a Java application running in an AKS cluster.",
        "author": "Mahmut Canga",
        "source": "https://github.com/Azure-Samples/pubsub-dapr-aks-java",
        "tags": [
            "dapr",
            "java",
            "aks",
            "msft"
        ],
        "id": "27a9a8be-9479-4433-8ff6-9ce9af9c92b6",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure Container Registry",
            "Azure Key Vault",
            "Azure Cache for Redis"
        ],
        "sampleQueries": [
            "How to deploy a Java microservices application with Dapr on AKS?",
            "Can I use Azure Kubernetes Service to run Java applications with Dapr Pub/Sub?",
            "What are the steps to setup event-driven microservices in AKS using Dapr for Java applications?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Dapr",
            "Java",
            "Spring Boot"
        ]
    },
    {
        "title": "Azure Functions - Chat using ChatGPT (Node.js JavaScript Function)",
        "description": "This sample shows how to take a ChatGPT prompt as HTTP Get or Post input, calculates the completions using OpenAI ChatGPT service, and then returns the output plus caches in a Blob state store.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-javascript-ai-openai-chatgpt",
        "tags": [
            "functions",
            "openai",
            "javascript",
            "ai",
            "chatgpt",
            "msft"
        ],
        "id": "c0405eae-fd20-4404-a742-a1c69c6004e7",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure Blob Storage"
        ],
        "sampleQueries": [
            "How do I deploy an Azure Function that uses OpenAI and Node.js to create chat applications?",
            "What are the requirements for running Node.js Azure Functions with ChatGPT?",
            "Can I cache ChatGPT responses in Azure Blob Storage when building a chat application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Javascript",
            "Node.js",
            "HTML"
        ]
    },
    {
        "title": "Azure Functions - Chat using ChatGPT (Python v2 Function)",
        "description": "This sample shows how to take a ChatGPT prompt as HTTP Get or Post input, calculates the completions using OpenAI ChatGPT service, and then returns the output plus caches in a Blob state store.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-python-ai-openai-chatgpt",
        "tags": [
            "functions",
            "openai",
            "python",
            "ai",
            "chatgpt",
            "msft"
        ],
        "id": "120f1e71-3110-44e7-9cc6-03e611083e9d",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure Blob Storage"
        ],
        "sampleQueries": [
            "How do I deploy a Python Azure Function that uses ChatGPT for chat operations?",
            "What do I need to set up a HTTP-based ChatGPT chatbot with Azure Functions?",
            "Can I cache OpenAI ChatGPT responses in Azure Blob Store using Azure Functions?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "OpenAI"
        ]
    },
    {
        "title": "Azure Functions - LangChain with Azure OpenAI and ChatGPT (Python v2 Function)",
        "description": "This sample shows how to take a human prompt as HTTP Get or Post input, calculates the completions using chains of human input and templates. This is a starting point that can be used for more sophisticated chains.",
        "author": "Paul Yuknewicz",
        "source": "https://github.com/Azure-Samples/function-python-ai-langchain",
        "tags": [
            "functions",
            "python",
            "ai",
            "msft"
        ],
        "id": "0d1ed1f5-b136-4320-b31f-c516f959bbaf",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How do I use LangChain with Azure OpenAI in an Azure Function?",
            "What are the steps to process HTTP POST requests using Python Azure Functions and OpenAI?",
            "Can you show me an example of Azure Functions Python code that integrates with ChatGPT and OpenAI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Bicep"
        ]
    },
    {
        "title": "Multi-repo ChatGPT and Enterprise data with Azure OpenAI and Cognitive Search",
        "description": "Azure OpenAI at scale in a secure manner.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure/GPT-RAG",
        "tags": [
            "openai",
            "chatgpt",
            "cognitivesearch",
            "python",
            "typescript",
            "bicep",
            "nodejs",
            "ai",
            "msft"
        ],
        "id": "adbc2d95-6bb8-4b0d-b0cb-2c0f34c19c11",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Cognitive Search"
        ],
        "sampleQueries": [
            "How do I set up a multi-repo ChatGPT with Azure OpenAI and Cognitive Search?",
            "Can I integrate my enterprise data into ChatGPT using Azure OpenAI at scale?",
            "What is the process for deploying a secure and scalable ChatGPT application using Azure AI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Typescript",
            "Nodejs"
        ]
    },
    {
        "title": "Azure Function with Event Hub with optional virtual network capabilities",
        "description": "An Azure Function app which sends events to and consumes from an Event Hub. The Function app can optionally be configured to integrate with a virtual network, and dependent resources configured with virtual network private endpoints. Managed identity is used for authentication to dependent resources.",
        "author": "Michael S. Collier",
        "source": "https://github.com/Azure-Samples/function-eventhub-vnet",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "functions",
            "appinsights",
            "keyvault",
            "eventhub",
            "azurestorage",
            "vnets",
            "msft"
        ],
        "id": "9a4d5000-89de-4ec2-beb4-9212d335edd7",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure Event Hubs",
            "Azure Key Vault",
            "Azure Storage",
            "Azure Virtual Network",
            "Application Insights"
        ],
        "sampleQueries": [
            "How to deploy an Azure Function with Event Hub using Azure Developer CLI?",
            "Can I configure private endpoints for Azure Functions with Virtual Network integration?",
            "What are the steps to run Azure Functions with Event Hub triggers locally for development?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            ".NET",
            "C#",
            "Dockerfile"
        ]
    },
    {
        "title": "URL Shortener using Microsoft Orleans and Azure for hosting and data",
        "description": "An ASP.NET Core 8.0 web application to illustrate basic Microsoft Orleans concepts; such as working with Grains, Silos, and persistent state. Uses Azure Developer CLI (azd) to build, deploy, and monitor.",
        "author": "Azure Cosmos DB Content Team",
        "source": "https://github.com/azure-samples/orleans-url-shortener",
        "tags": [
            "bicep",
            "dotnetCsharp",
            "cosmosdb",
            "msft",
            "aca"
        ],
        "id": "904f5d00-aed0-40e9-9e00-12c9482ae5c9",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Cosmos DB",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How can I get started with Microsoft Orleans for building a URL shortener?",
            "What steps are required to deploy a URL Shortener using Azure and Orleans?",
            "Can I use the Azure Developer CLI to monitor an ASP.NET Core application using Cosmos DB?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Orleans",
            "ASP.NET Core",
            "C#"
        ]
    },
    {
        "title": "Azure OpenAI priority-based load balancer with Azure Container Apps",
        "description": "A load balancer crafted specifically for Azure OpenAI, which is aware of 'retry-after' headers and intelligently pause traffic when certain OpenAI endpoints reach maximum capacity.",
        "author": "Andre Dewes",
        "source": "https://github.com/Azure-Samples/openai-aca-lb",
        "tags": [
            "aca",
            "openai",
            "ai",
            "msft",
            "bicep",
            "dotnetCsharp"
        ],
        "id": "c3694deb-a6d7-4c20-8bbf-f12486a503e3",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How do I deploy an OpenAI load balancer using Azure Container Apps?",
            "What is the smart load balancing approach for OpenAI endpoints on Azure?",
            "Can the Azure OpenAI priority-based load balancer handle too many requests with retry strategy?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#"
        ]
    },
    {
        "title": "Azure Kubernetes Service Store Demo",
        "description": "Sample microservices app for AKS demos, tutorials, and experiments.",
        "author": "AKS Content Team",
        "source": "https://github.com/azure-samples/aks-store-demo",
        "tags": [
            "terraform",
            "aks",
            "openai",
            "ai",
            "msft",
            "kubernetes",
            "helm"
        ],
        "id": "eff16b17-9019-4b60-8438-f49781946266",
        "deploymentOptions": [
            "azcli",
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure OpenAI",
            "Azure Cosmos DB",
            "Azure Container Registry",
            "Azure Service Bus",
            "Azure Monitor",
            "Azure Log Analytics",
            "Azure Managed Grafana",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How can I deploy the AKS Store Demo on Azure Kubernetes Service with Terraform?",
            "What is the procedure to integrate OpenAI GPT-3 for generating product descriptions in the AKS Store Demo?",
            "How to run the Azure Kubernetes Service Store Demo locally using Docker Compose?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Go",
            "Javascript",
            "Nodejs",
            "Python",
            "Rust",
            "Terraform",
            "Dockerfile",
            "Vue.js"
        ]
    },
    {
        "title": "Setting up Azure OpenAI as a central capability within your organization",
        "description": "Unleash the power of Azure AI to all your application developers in a secure & manageable way with Azure API Management and Azure Container Apps, utilizing Azure OpenAI PTUs across your organization with chargeback capabilities.",
        "author": "Azure AI Content Team, Remco Brosky, Mick Vleeshouwer, Pascal van der Heiden",
        "source": "https://github.com/Azure/enterprise-azureai",
        "tags": [
            "bicep",
            "apim",
            "openai",
            "ai",
            "appinsights",
            "monitor",
            "enterprisepatterns",
            "aca",
            "dotnetCsharp",
            "msft"
        ],
        "id": "94b2c974-76a2-4df6-b9a7-7a9dbc9b707f",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure Container Apps",
            "Azure OpenAI",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How do I set up a centralized Azure OpenAI capability for my developers using Azure API Management?",
            "What steps are needed to implement usage monitoring and cost chargeback for Azure OpenAI in my organization?",
            "How can I configure Azure OpenAI PTUs across my organization with Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#",
            "JavaScript",
            "Dockerfile",
            "Json",
            "Xml",
            "Powershell",
            "Bash",
            "Nodejs"
        ]
    },
    {
        "title": "SAP Cloud SDK on Azure Functions Quickstart (TypeScript)",
        "description": "This repos serves as quick-start project showcasing SAP Cloud SDK for JavaScript OData consumption running on Azure Functions. Its primary purpose is to set you up for success for your SAP extension project on Azure and reduce the lead time to your first successful deployment as much as possible with developer friendly commands.",
        "author": "Martin Pankraz, Christian Lechner",
        "source": "https://github.com/Azure-Samples/functions-javascript-sap-cloud-sdk-quickstart",
        "tags": [
            "typescript",
            "nodejs",
            "bicep",
            "webapps",
            "apim",
            "keyvault",
            "appinsights",
            "nestjs",
            "sap",
            "sapcap",
            "msft"
        ],
        "id": "e2835a74-6bb9-4a15-b4d8-dae78ee6f0ad",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Functions",
            "Azure Key Vault",
            "Azure API Management",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How do I get started with SAP Cloud SDK on Azure Functions using TypeScript?",
            "What steps are required for consuming SAP OData services in an Azure Function app?",
            "How to deploy an SAP Cloud SDK project on Azure Functions with Azure Developer CLI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Typescript",
            "Javascript",
            "Nodejs",
            "Nestjs",
            "SAP"
        ]
    },
    {
        "title": "SAP CAP on Azure App Service Quickstart",
        "description": "This repos serves as quick-start project showcasing SAP Cloud Application Programming Model (CAP) for Node.js OData consumption from SAP S/4HANA running on Azure App Services backed with Azure Cosmos DB for PostgreSQL. SAP offers a native module cds-dbs for PostgreSQL integration.",
        "author": "Martin Pankraz, Volker Buzek",
        "source": "https://github.com/Azure-Samples/app-service-javascript-sap-cap-quickstart",
        "tags": [
            "nodejs",
            "bicep",
            "webapps",
            "apim",
            "keyvault",
            "appinsights",
            "nestjs",
            "sap",
            "cosmosdb",
            "azuredb-postgreSQL",
            "sapcloudsdk",
            "msft"
        ],
        "id": "87cca4d5-958c-4255-87ae-5df122ec34ad",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure App Service",
            "Azure API Management",
            "Azure Key Vault",
            "Azure Monitor",
            "Azure Cosmos DB",
            "Azure Database for PostgreSQL"
        ],
        "sampleQueries": [
            "How can I quickly start an SAP CAP project on Azure App Service?",
            "What are the best practices for integrating SAP CAP with Azure Cosmos DB for PostgreSQL?",
            "Is there a quickstart guide for running Node.js OData services from SAP S/4HANA on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Nodejs",
            "Nestjs",
            "SAP Cloud SDK"
        ]
    },
    {
        "title": "Azure API Management policy for priority-based routing to Azure OpenAI",
        "description": "A load balancer policy crafted specifically for Azure OpenAI, which is aware of 'retry-after' headers and intelligently pause traffic when certain OpenAI endpoints reach maximum capacity.",
        "author": "Andre Dewes, Chris Ayers",
        "source": "https://github.com/Azure-Samples/openai-apim-lb",
        "tags": [
            "apim",
            "openai",
            "ai",
            "msft",
            "bicep"
        ],
        "id": "c0e05ee1-7abc-4c7e-b609-0b8374d221b8",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How can I set up a priority-based routing policy in Azure API Management for OpenAI?",
            "What is the best way to handle OpenAI endpoint throttling with Azure API Management?",
            "Can I dynamically balance traffic between OpenAI backends using Azure API Management policies?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Python",
            "XML",
            "YAML"
        ]
    },
    {
        "title": "Langfuse on Azure",
        "description": "Deploy Langfuse (open-source LLM observability platform) to Azure Container Apps with PostgreSQL Flexible Server.",
        "author": "Pamela Fox",
        "source": "https://github.com/Azure-Samples/langfuse-on-azure",
        "tags": [
            "aca",
            "azuredb-postgreSQL",
            "keyvault",
            "ai",
            "msft",
            "bicep"
        ],
        "id": "3a69118c-f6c3-4d59-90c4-188975527db2",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Database for PostgreSQL",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I deploy Langfuse to Azure Container Apps using Azure Developer CLI?",
            "What are the steps to set up Entra-based authentication for Langfuse on Azure?",
            "Can I store observability data for my LLM application using PostgreSQL and Langfuse in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Python"
        ]
    },
    {
        "title": "PostgreSQL + Pgvector",
        "description": "Deploy a PostgreSQL Flexible Server with Pgvector extension and keyless auth, then access it from Python scripts.",
        "author": "Pamela Fox",
        "source": "https://github.com/Azure-Samples/azure-postgres-pgvector-python",
        "tags": [
            "azuredb-postgreSQL",
            "ai",
            "msft",
            "bicep",
            "python"
        ],
        "id": "fa79ba6d-e558-4025-b5ea-23970851b075",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Database for PostgreSQL"
        ],
        "sampleQueries": [
            "How to deploy PostgreSQL with Pgvector on Azure using Bicep templates?",
            "What is the process of authenticating to Azure PostgreSQL Flexible Server with Entra?",
            "How can I use Python scripts to interact with PostgreSQL and Pgvector in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Python"
        ]
    },
    {
        "title": "Azure Open AI management and logging via Azure API Management",
        "description": "To use Azure Open AI in production, you need to manage each application and user by issuing new keys, and monitor their usage such as number of tokens they consume and types of endpoint and mode they use. The solution uses Azure APIM and other resources to support such requirements.",
        "author": "Kenichiro Nakamura",
        "source": "https://github.com/microsoft/aoai-logging-with-apim",
        "tags": [
            "bicep",
            "msft",
            "ai",
            "openai",
            "apim",
            "keyvault",
            "dotnetCsharp"
        ],
        "id": "c0b0b2c7-596f-45ca-9df8-ff9355ac471e",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure OpenAI",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I manage keys and monitor usage for Azure OpenAI applications using Azure API Management?",
            "Can Azure API Management help set different throttling settings and log token usage for Azure OpenAI?",
            "What is the approach to handle key management and endpoint access consolidation for Azure OpenAI with APIM?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "C#"
        ]
    },
    {
        "title": ".NET AI samples with Azure OpenAI",
        "description": ".NET samples demonstrating how to use AI in your .NET applications. Each sample demonstrate a specific AI scenario with only a few lines of code. It consists of a console application, running locally, that will send request(s) to an Azure OpenAI Service deployed in your Azure subscription",
        "author": "Frank Boucher",
        "source": "https://github.com/dotnet/ai-samples",
        "tags": [
            "ai",
            "openai",
            "dotnetCsharp",
            "azureai",
            "msft",
            "gpt",
            "dall-e",
            "semantickernel",
            "bicep"
        ],
        "id": "b33ac45a-f158-449d-8933-29f998143284",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure AI",
            "Azure OpenAI Service"
        ],
        "sampleQueries": [
            "How can I integrate AI into my .NET applications using Azure OpenAI?",
            "What are the .NET samples available for AI scenarios with Azure OpenAI?",
            "Where can I find practical examples of AI infused .NET applications using Azure AI services?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "PowerShell"
        ]
    },
    {
        "title": "Azure OpenAI Conference Session Assistant",
        "description": "Build a conference assistant using using Vector Search and Retrieval Augmented Generator to allow attendees to ask questions about conference in natural language",
        "author": "Davide Mauri",
        "source": "https://github.com/Azure-Samples/azure-sql-db-session-recommender-v2",
        "tags": [
            "bicep",
            "msft",
            "reactjs",
            "appservice",
            "functions",
            "azuresql",
            "swa",
            "appinsights",
            "openai",
            "azureai",
            "enterprisepatterns",
            "ai"
        ],
        "id": "24831952-5b15-471d-9eb9-4dbdb61ae196",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Functions",
            "Azure SQL Database",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How to deploy a conference session assistant using Azure OpenAI?",
            "What's the architecture for a session recommender with Azure SQL DB and Vector Search?",
            "Can I build a session recommendation system with OpenAI and Azure SQL using Jamstack?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Csharp",
            "SQL",
            "Tsql",
            "Javascript",
            "Html",
            "Reactjs"
        ]
    },
    {
        "title": "Dynamic Configuration for AKS workloads (w/o changing ConfigMaps or with Azure App Configuration)",
        "description": "A sample that demonstrates how to dynamically configure an Azure Kubernetes Service (AKS) workload with Azure App Configuration.",
        "author": "Azure App Configuration",
        "source": "https://github.com/Azure-Samples/azure-appconfig-aks",
        "tags": [
            "azureappconfig",
            "kubernetes",
            "aks",
            "dotnetCsharp",
            "bicep",
            "webapps",
            "msft",
            "new"
        ],
        "id": "3b4599e6-bb03-4f19-bce8-5151a0225c7b",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure Container Registry",
            "Azure App Configuration"
        ],
        "sampleQueries": [
            "How do I dynamically manage AKS configurations with Azure App Configuration?",
            "What are the steps to set up an AKS workload using Azure Developer CLI templates?",
            "Can I integrate Azure App Configuration into an AKS cluster without modifying ConfigMaps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Csharp",
            "PowerShell",
            "Bash",
            "HTML",
            "Bicep"
        ]
    },
    {
        "title": "Chat with your Data Solution Accelerator",
        "description": "A Solution Accelerator for the RAG pattern running in Azure, using Azure AI Search for retrieval and Azure OpenAI large language models to power ChatGPT-style and Q&A experiences. This includes most common requirements and best practices.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/chat-with-your-data-solution-accelerator",
        "tags": [
            "bicep",
            "python",
            "typescript",
            "flask",
            "cognitivesearch",
            "openai",
            "chatgpt",
            "ai",
            "msft",
            "new"
        ],
        "id": "3450a16f-3b71-48ba-9bd5-c6568f105300",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Cognitive Search",
            "Azure App Service",
            "Azure Bot Service",
            "Azure Document Intelligence",
            "Azure Functions",
            "Azure Storage Account",
            "Azure Speech Service",
            "Azure Cosmos DB"
        ],
        "sampleQueries": [
            "How can I implement RAG pattern with Azure AI and Large Language Models?",
            "What is the process to deploy Chat with your Data Solution Accelerator on Azure?",
            "Can I customize Chat with your Data Solution Accelerator to use my company's internal documents?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Typescript",
            "Bicep",
            "Flask",
            "OpenAI"
        ]
    },
    {
        "title": "Azure Kubernetes Service Store Demo",
        "description": "Sample microservices app for AKS demos, tutorials, and experiments.",
        "author": "AKS Content Team",
        "source": "https://github.com/azure-samples/aks-store-demo",
        "tags": [
            "aks",
            "kubernetes",
            "terraform",
            "openAI",
            "app",
            "helm",
            "ai",
            "Azure"
        ],
        "id": "9d295613-0607-4337-97b3-bdf702cd9252",
        "deploymentOptions": [
            "azcli",
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure OpenAI",
            "Azure Cosmos DB",
            "Azure Container Registry",
            "Azure Service Bus",
            "Azure Monitor",
            "Azure Log Analytics",
            "Azure Managed Grafana",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How do I deploy the Azure Kubernetes Service Store Demo using AKS and Terraform?",
            "What components are included in the AKS Store Demo application?",
            "Can I integrate AI-powered product descriptions using OpenAI in the AKS Store Demo?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Go",
            "Javascript",
            "Rust",
            "Vue.js",
            "Python"
        ]
    },
    {
        "title": "Containerized Apps on Azure Kubernetes Service",
        "description": "A base Azure Kubernetes Service template with placeholders to include the application source code (no application source code included) and Kubernetes manifest files.",
        "author": "Ahmed Sabbour",
        "source": "https://github.com/sabbour/aks-app-template",
        "tags": [
            "aks",
            "kubernetes",
            "bicep",
            "grafana",
            "app",
            "keda",
            "prometheus",
            "Azure",
            "containers"
        ],
        "id": "3e709e9e-cfbf-44e5-8cac-52e0e371f4f8",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure Container Registry",
            "Azure Managed Grafana",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How to deploy a containerized app on Azure Kubernetes Service using the AzD template?",
            "What are the prerequisites for using the Azure Kubernetes Service AKS app template on GitHub?",
            "How do I integrate Prometheus and Grafana for monitoring in Azure Kubernetes Service?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "Shell"
        ]
    },
    {
        "title": "Kubernetes React Web App with Node.js API and MongoDB",
        "description": "A blueprint for getting a React.js web app with a Node.js API and a MongoDB database on Azure. The blueprint includes sample application code (a ToDo web app) which can be removed and replaced with your own application code. Add your own source code and leverage the Infrastructure as Code assets (written in Bicep) to get up and running quickly. This architecture is for running Kubernetes clusters without setting up the control plane.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/todo-nodejs-mongo-aks",
        "tags": [
            "aks",
            "kubernetes",
            "bicep",
            "cosmosdb",
            "javascript",
            "keyvault",
            "mongodb",
            "monitor",
            "nodejs",
            "reactjs",
            "typescript",
            "app",
            "Azure"
        ],
        "id": "f408ffe0-f200-4faa-b35e-2674e901cd12",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Kubernetes Service",
            "Azure Cosmos DB",
            "Azure Monitor",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How to deploy a React web app with Node.js API and MongoDB on Azure using AKS",
            "What's needed to set up a Kubernetes cluster for a ToDo web app with Azure Cosmos DB for MongoDB storage?",
            "How can I monitor my React and Node.js application on Azure after deployment?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Node.js",
            "Bicep",
            "Typescript",
            "Javascript",
            "React.js",
            "HTML"
        ]
    },
    {
        "title": "Quickstart: Deploy an Azure Kubernetes Service (AKS) cluster using Azure CLI",
        "description": "Learn how to quickly deploy a Kubernetes cluster and deploy an application in Azure Kubernetes Service (AKS) using Azure CLI.",
        "author": "Microsoft",
        "source": "CreateAksClusterAzureCli",
        "tags": [
            "kubernetes",
            "azure",
            "CLI",
            "aks",
            "deployment",
            "cluster",
            "application",
            "setup",
            "tutorial",
            "provision"
        ],
        "id": "faf0d1e7-daca-4783-b19e-ba2527d2d9d3",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Faks%2Flearn%2Fquick-kubernetes-deploy-cli.md"
            }
        },
        "products": [
            "Azure Kubernetes Service",
            "Azure CLI"
        ],
        "sampleQueries": [
            "How do I deploy an application in Azure Kubernetes Service using the CLI?",
            "Can I set up a Kubernetes cluster in Azure with the Azure CLI?",
            "What are the steps for provisioning an AKS cluster using an ExecDocs tutorial?"
        ],
        "sourceType": "ExecDocs",
        "tech": []
    },
    {
        "title": "Tutorial: Deploy WordPress on AKS cluster by using Azure CLI",
        "description": "Learn how to quickly build and deploy WordPress on AKS with Azure Database for MySQL - Flexible Server.",
        "author": "Microsoft",
        "source": "CreateWordpressAks",
        "tags": [
            "wordpress",
            "aks",
            "azure",
            "mysql",
            "deployment",
            "database",
            "container",
            "server",
            "build",
            "tutorial"
        ],
        "id": "75a2b5f3-82ec-4d00-af34-f07c61583d2a",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Fmysql%2Fflexible-server%2Ftutorial-deploy-wordpress-on-aks.md"
            }
        },
        "products": [
            "Azure Kubernetes Service",
            "Azure Database for MySQL"
        ],
        "sampleQueries": [
            "How do I deploy WordPress on an AKS cluster using Azure CLI?",
            "Can I use Azure Database for MySQL - Flexible Server with AKS for my WordPress site?",
            "What are the steps to build a containerized WordPress site on Azure Kubernetes Service?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Wordpress",
            "MySQL"
        ]
    },
    {
        "title": "Quickstart: Building your first static site with the Azure Static Web Apps using the CLI",
        "description": "Learn to deploy a static site to Azure Static Web Apps with the Azure CLI.",
        "author": "Microsoft",
        "source": "CreateStaticWebAppAzureCli",
        "tags": [
            "static",
            "azure",
            "webapp",
            "apps",
            "deployment",
            "cli",
            "tutorial",
            "site",
            "build",
            "AzureCLI"
        ],
        "id": "199d0d86-8cb0-431e-8acf-a3c5d9527fd0",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Fstatic-web-apps%2Fget-started-cli.md"
            }
        },
        "products": [
            "Azure Static Web Apps",
            "Azure CLI"
        ],
        "sampleQueries": [
            "How do I deploy a static website on Azure using the CLI?",
            "What is the best way to build and deploy a static site with Azure Static Web Apps?",
            "Can you guide me through deploying a static site to Azure using the Azure CLI?"
        ],
        "sourceType": "ExecDocs",
        "tech": []
    },
    {
        "title": "Create virtual machines in a Flexible scale set using Azure CLI",
        "description": "Learn how to create a Virtual Machine Scale Set in Flexible orchestration mode using Azure CLI.",
        "author": "Microsoft",
        "source": "CreateVmFlexibleScaleSet",
        "tags": [
            "virtual",
            "scaleset",
            "azure",
            "cli",
            "orchestration",
            "flexible",
            "deployment",
            "machine",
            "tutorial",
            "oneclick"
        ],
        "id": "1ef90b47-d262-4370-8731-e6568014100f",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "azure-docs%2Farticles%2Fvirtual-machine-scale-sets%2Fflexible-virtual-machine-scale-sets-cli.md"
            }
        },
        "products": [
            "Azure Virtual Machine Scale Sets",
            "Azure CLI"
        ],
        "sampleQueries": [
            "How do I create a VM Scale Set in Flexible orchestration mode using Azure CLI?",
            "Is there a tutorial for deploying virtual machines in a Flexible scale set on Azure?",
            "Can I use Azure CLI to manage Virtual Machine Scale Sets in Azure?"
        ],
        "sourceType": "ExecDocs",
        "tech": []
    },
    {
        "title": "Deploy Inspektor Gadget in an Azure Kubernetes Service cluster",
        "description": "This tutorial shows how to deploy Inspektor Gadget in an AKS cluster",
        "author": "Microsoft",
        "source": "DeployInspektorGadget",
        "tags": [
            "tutorial",
            "inspektor",
            "gadget",
            "aks",
            "cluster",
            "deployment",
            "kubernetes",
            "setup",
            "install",
            "monitoring"
        ],
        "id": "cf9941e7-df14-400d-86a3-4ef82f016d05",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "DeployIGonAKS%2FREADME.md"
            }
        },
        "products": [
            "Azure Kubernetes Service"
        ],
        "sampleQueries": [
            "How can I set up Inspektor Gadget on an Azure Kubernetes Service cluster?",
            "What is the deployment process for Inspektor Gadget in AKS?",
            "Can I install Inspektor Gadget for monitoring in a Kubernetes cluster on Azure?"
        ],
        "sourceType": "ExecDocs",
        "tech": [
            "Kubernetes"
        ]
    },
    {
        "title": "Deploy a Scalable & Secure Azure Kubernetes Service cluster using the Azure CLI",
        "description": "This tutorial where we will take you step by step in creating an Azure Kubernetes Web Application that is secured via https.",
        "author": "Microsoft",
        "source": "DeployScalableAKS",
        "tags": [
            "tutorial",
            "azure",
            "kubernetes",
            "web",
            "application",
            "HTTPS",
            "secure",
            "deployment",
            "setup",
            "step-by-step",
            "one click"
        ],
        "id": "dc1f07b7-6a62-42d8-b683-6d666f56dd64",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {
            "execDocs": {
                "path": "CreateAKSWebApp%2FREADME.md"
            }
        },
        "products": [
            "Azure Kubernetes Service",
            "Azure CLI"
        ],
        "sampleQueries": [
            "How do I set up a secure HTTPS Kubernetes web application in Azure?",
            "What is the process of deploying a scalable Azure Kubernetes Service cluster?",
            "Where can I find a step-by-step tutorial for setting up a secure web application on Azure Kubernetes Service?"
        ],
        "sourceType": "ExecDocs",
        "tech": []
    },
    {
        "title": "Azure OpenAI RAG Chat Experience with Node.js",
        "description": "This sample shows how to build an AI chat experience with Retrieval-Augmented Generation (RAG) using LangChain4J and OpenAI language models. The application is hosted on Azure Static Web Apps and Azure Container Apps, with Azure AI Search as the vector database. You can use it as a starting point for building more complex AI applications.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-openai-rag-workshop",
        "tags": [
            "openAI",
            "rag",
            "azure",
            "nodejs",
            "langchain",
            "app",
            "chat",
            "search",
            "ai",
            "model"
        ],
        "id": "7ea19a29-b97a-47e9-b5b8-3e974d77db88",
        "deploymentOptions": [],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Container Apps",
            "Azure AI Search"
        ],
        "sampleQueries": [
            "How can I create an AI chat experience using Azure OpenAI and Node.js?",
            "What are the steps to deploy the Azure OpenAI RAG Chat Experience on Azure?",
            "How to use LangChain.js for building a chatbot with Retrieval-Augmented Generation?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Javascript",
            "Node.js",
            "Typescript",
            "LangChain.js",
            "OpenAI SDK",
            "Fastify"
        ]
    },
    {
        "title": "Serverless AI Chat with RAG using LangChain.js",
        "description": "This sample shows how to build a serverless AI chat experience with Retrieval-Augmented Generation using LangChain.js and Azure. The application is hosted on Azure Static Web Apps and Azure Functions, with Azure AI Search as the vector database. You can use it as a starting point for building more complex AI applications.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/serverless-chat-langchainjs",
        "tags": [
            "serverless",
            "ai",
            "chat",
            "azure",
            "langchain",
            "search",
            "app",
            "openAI"
        ],
        "id": "ff16119d-5fa9-4011-b0f3-62ef2b71650f",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Functions",
            "Azure Cognitive Search",
            "Azure Cosmos DB",
            "Azure Blob Storage"
        ],
        "sampleQueries": [
            "How can I create a serverless AI chat application using Azure and LangChain.js?",
            "What are the steps to deploy a Retrieval-Augmented Generation chat experience on Azure?",
            "Can I integrate my own enterprise documents into the serverless AI chat with RAG provided by Azure Samples?"
        ],
        "sourceType": "Azd",
        "tech": [
            "JavaScript",
            "LangChain.js",
            "TypeScript",
            "Lit"
        ]
    },
    {
        "title": "Use Key Vault from App Service with Azure Managed Identity",
        "description": "This sample shows how to use Azure KeyVault from App Service with Azure Managed Identity.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/app-service-msi-keyvault-dotnet",
        "tags": [
            "key",
            "vault",
            "appservice",
            "azure",
            "identity",
            "dotnet",
            "azure",
            "msi"
        ],
        "id": "7215fa5f-57b0-4b7e-a347-cd07c2fc2fd1",
        "deploymentOptions": [],
        "deploymentConfig": {},
        "products": [
            "Azure Key Vault",
            "Azure App Service",
            "Azure Managed Identity"
        ],
        "sampleQueries": [
            "How do I store secrets using Azure Key Vault in an App Service app?",
            "Can I use Azure Managed Identity with App Service to access Key Vault?",
            "What's the best way to integrate Azure Key Vault with .NET applications on App Service?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Dotnet"
        ]
    },
    {
        "title": "ASP.NET sample for Azure App Service",
        "description": "This is an ASP.NET MVC web app that you can deploy to Azure App Service using Git.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/app-service-web-dotnet-get-started",
        "tags": [
            "dotnet",
            "azure",
            "appservice",
            "git",
            "web",
            "app",
            "mvc",
            "aspnet"
        ],
        "id": "9b718fe5-05b1-4444-96be-7e5706f876d7",
        "deploymentOptions": [],
        "deploymentConfig": {},
        "products": [
            "Azure App Service"
        ],
        "sampleQueries": [
            "How do I deploy an ASP.NET MVC web app to Azure App Service using Git?",
            "What are the steps to get started with web apps in Azure App Service?",
            "Can I use Visual Studio to create an ASP.NET app for Azure App Service?"
        ],
        "sourceType": "AzureSamples",
        "tech": "None"
    },
    {
        "title": "Azure AI Search Comparison Tool",
        "description": "This repository contains a React application that demonstrates the Azure AI Search Comparison Tool. This tool provides a web interface for visualizing different retrieval modes available in Azure AI Search. Additionally, the tool supports image search using text-to-image and image-to-image search functionalities. It leverages Azure OpenAI for text embeddings and Azure AI Vision API for image embeddings.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-search-comparison-tool",
        "tags": [
            "azure",
            "ai",
            "search",
            "react",
            "app",
            "web",
            "openAI",
            "image-to-image",
            "text-to-image",
            "retrieval"
        ],
        "id": "a470d1ed-7e75-421b-8794-9c6165b73c79",
        "deploymentOptions": [],
        "deploymentConfig": {},
        "products": [
            "Azure Cognitive Search",
            "Azure OpenAI",
            "Azure Computer Vision"
        ],
        "sampleQueries": [
            "How do I use Azure AI Search for image search with text-to-image functionality?",
            "What is the process to set up Azure AI Vision API for image embeddings in the Azure AI Search Comparison Tool?",
            "Can Azure AI Search perform hybrid queries combining text and vector search?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "React",
            "Node.js",
            "Python",
            "Powershell",
            "JavaScript"
        ]
    },
    {
        "title": "Azure OpenAI Chat Frontend",
        "description": "This folder contains a Lit implementation, consisting of multiple LitElements that can be used to interact with the Azure OpenAI API. It is a classic chat UI that can be used to send messages to the API and receive responses.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azure-openai-chat-frontend",
        "tags": [
            "lit",
            "azure",
            "openAI",
            "typescript",
            "litelement",
            "vite",
            "rollup",
            "frontend"
        ],
        "id": "8a8499b2-ad33-4e73-846d-5715aed9f8f7",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How do I integrate the Azure OpenAI API with a Lit frontend?",
            "What is the process for setting up a classic chat UI using Azure OpenAI and LitElements?",
            "Can I deploy an Azure OpenAI Chat Frontend using TypeScript and Vite?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Lit",
            "Typescript",
            "Litelement",
            "Vite",
            "Rollup"
        ]
    },
    {
        "title": "Azure AI Studio Starter Template",
        "description": "This template helps users learn how to use Azure AI Studio. It creates an Azure AI Studio hub, project and required dependent resources including Azure Open AI Service, Cognitive Search and more.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/azd-aistudio-starter",
        "tags": [
            "azd",
            "bicep",
            "azure",
            "ai",
            "template",
            "openAI",
            "cognitive",
            "aistudio"
        ],
        "id": "3b2621a8-62cf-418c-9811-916dae3df1d4",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure AI Studio",
            "Azure OpenAI Service",
            "Azure Cognitive Search",
            "Azure Storage",
            "Azure Key Vault",
            "Azure Application Insights",
            "Azure Container Registry"
        ],
        "sampleQueries": [
            "How do I start a new project using the Azure AI Studio Starter Template?",
            "What Azure resources are created with the Azure AI Studio starter template?",
            "How to configure the Azure AI Studio starter template to disable AI Search Service?"
        ],
        "sourceType": "Azd",
        "tech": []
    },
    {
        "title": "Contoso Chat Retail with Azure AI Studio and Promptflow",
        "description": "This sample creates a customer support chat agent for an online retailer called Contoso Outdoors. The solution uses a retrieval-augmented generation pattern to ground responses in the company's product and customer data. Customers can ask questions about the retailer's product catalog, and also get recommendations based on their prior purchases.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/contoso-chat",
        "tags": [
            "python",
            "bicep",
            "azure",
            "prompty",
            "openAI",
            "cosmos-db",
            "prompt-flow",
            "RAG"
        ],
        "id": "892c1998-ab31-4592-a453-8c8ec947df6a",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Cognitive Search",
            "Azure Cosmos DB",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How can I create a customer support chatbot using Azure AI Studio and Promptflow?",
            "Is there a GitHub repository for a retail copilot solution using retrieval augmented generation?",
            "Can I get product recommendations in a chatbot using Azure Cosmos DB and Azure AI?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Bash",
            "Bicep",
            "Prompty"
        ]
    },
    {
        "title": "HTML sample for Azure App Service",
        "description": "This is a simple HTML/CSS/JS web app that can be deployed to Azure App Service using Git. It is built on the Carousel template by Bootstrap.",
        "author": "Microsoft",
        "source": "https://github.com/Azure-Samples/app-service-web-html-get-started",
        "tags": [
            "javascript",
            "azure",
            "app-service",
            "html",
            "web-app",
            "css",
            "git",
            "bootstrap"
        ],
        "id": "92455774-ab16-49b7-968c-e5963cbe880d",
        "deploymentOptions": [],
        "deploymentConfig": {},
        "products": [
            "Azure App Service"
        ],
        "sampleQueries": [
            "How do I deploy a simple HTML/CSS/JS web app to Azure App Service?",
            "Can I use Git to deploy a Bootstrap-based web application on Azure?",
            "What's the process for deploying web apps built with the Carousel Bootstrap template to Azure App Service?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Javascript",
            "HTML",
            "CSS",
            "Bootstrap"
        ]
    },
    {
        "title": "SAP Deployment Automation Framework",
        "description": "The SAP deployment automation framework on Azure is an open-source orchestration tool for deploying, installing and maintaining SAP environments. You can create infrastructure for SAP landscapes based on SAP HANA and NetWeaver with AnyDB on any of the SAP-supported operating system versions and deploy them into any Azure region. The framework uses Terraform for infrastructure deployment, and Ansible for the operating system and application configuration.",
        "author": "Microsoft",
        "source": "https://github.com/Azure/sap-automation",
        "tags": [
            "SAP",
            "azure",
            "terraform",
            "ansible",
            "deploy",
            "db",
            "automation",
            "framework"
        ],
        "id": "42ed645b-37f7-4468-95f4-ca5a515b63e5",
        "deploymentOptions": [
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [],
        "sampleQueries": [
            "How do I automate SAP deployments on Azure using Terraform and Ansible?",
            "What is the SAP deployment automation framework and how does it integrate with Azure?",
            "Can I deploy SAP HANA and NetWeaver on Azure regions using the SAP deployment automation framework?"
        ],
        "sourceType": "AzureSamples",
        "tech": [
            "Terraform",
            "Ansible"
        ]
    },
    {
        "title": "Azure AI Starter",
        "description": "Bicep template that deploys Azure AI services with configured machine learning models.",
        "author": "Azure Dev",
        "source": "https://github.com/Azure-Samples/azd-ai-starter",
        "tags": [
            "bicep",
            "ai",
            "azureai",
            "openai",
            "msft"
        ],
        "id": "51b84127-0563-45c3-b2d2-03a66433ca70",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure AI"
        ],
        "sampleQueries": [
            "How do I start using the Azure AI starter template with Bicep on Azure?",
            "What are the prerequisites for deploying the bicep template for Azure AI services?",
            "Can I integrate my own machine learning models with the Azure AI starter template?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep"
        ]
    },
    {
        "title": "Simple Chat Application using Azure OpenAI (Python)",
        "description": "Build a chat application using Azure OpenAI GPT models.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/openai-chat-app-quickstart",
        "tags": [
            "msft",
            "aicollection",
            "python",
            "openai",
            "aca",
            "bicep",
            "ai"
        ],
        "id": "8e07cf1a-0aba-41b2-9595-ce1ff8b2f167",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Container Apps",
            "Azure Container Registry",
            "Azure Log Analytics"
        ],
        "sampleQueries": [
            "How can I create a chat application using Azure OpenAI with Python?",
            "What are the steps to deploy a Python chat app on Azure using Azure OpenAI GPT models?",
            "Is there a guided experience for setting up a Python-based Azure OpenAI chat application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Quart",
            "OpenAI"
        ]
    },
    {
        "title": "RAG on PostgreSQL",
        "description": "A RAG app to ask questions about rows in a database table. Deployable on Azure Container Apps with PostgreSQL Flexible Server.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/rag-postgres-openai-python",
        "tags": [
            "msft",
            "aicollection",
            "python",
            "openai",
            "aca",
            "bicep",
            "ai",
            "azuredb-postgreSQL",
            "rag"
        ],
        "id": "7fce9298-6849-439b-9080-7901412ac48e",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure Database for PostgreSQL Flexible Server",
            "Azure OpenAI",
            "Azure Monitor"
        ],
        "sampleQueries": [
            "How to deploy a RAG application with PostgreSQL on Azure Container Apps?",
            "What is the best way to use OpenAI with PostgreSQL for creating a RAG application?",
            "How can I integrate Azure OpenAI into a web-based chat application using PostgreSQL?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "FastAPI",
            "React",
            "FluentUI",
            "Node.js"
        ]
    },
    {
        "title": "Creative Writing Assistant: Working with Agents using Promptflow (Python Implementation)",
        "description": "A creative writing multi-agent solution to help users write articles.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/agent-openai-python-prompty",
        "tags": [
            "msft",
            "aicollection",
            "python",
            "openai",
            "aks",
            "terraform",
            "ai",
            "aisearch"
        ],
        "id": "eac0f912-29ba-40fc-8d1b-2e495fc94abd",
        "deploymentOptions": [
            "azcli",
            "terraform"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Bing Web Search",
            "Azure Cognitive Search"
        ],
        "sampleQueries": [
            "How can I use Promptflow with Azure's OpenAI service for creative writing?",
            "What is needed to deploy a multi-agent creative writing solution on Azure?",
            "Can I integrate Azure Cognitive Search with a Python application to assist in article writing?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Javascript",
            "Typescript",
            "Bash",
            "Bicep"
        ]
    },
    {
        "title": "Process Automation: Speech to Text and Summarization with AI Studio",
        "description": "This solution converts speech to text and then processes and summarizes the text based on the prompt scenario.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/summarization-openai-python-promptflow",
        "tags": [
            "msft",
            "aicollection",
            "python",
            "openai",
            "aca",
            "bicep",
            "ai",
            "speechservice"
        ],
        "id": "abb9e776-88e4-4519-9d59-73bccf78f635",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure AI Speech Service",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How can I automate speech to text and summarization using Azure AI?",
            "What steps are involved in setting up the Process Automation solution on Azure?",
            "Can I process audio reports with Speech Service and get summarized text in Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python"
        ]
    },
    {
        "title": "Function Calling with Prompty, LangChain and Elastic Search",
        "description": "Function calling for vector database lookup based on user question.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/agent-python-openai-prompty-langchain",
        "tags": [
            "msft",
            "aicollection",
            "python",
            "openai",
            "aistudio",
            "bicep",
            "ai"
        ],
        "id": "b2aa83fb-7911-4f5f-bf5f-4f429ca1d67d",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure AI Studio",
            "Azure Key Vault"
        ],
        "sampleQueries": [
            "How can I build a language model search agent using Prompty, LangChain, and Elastic Search on Azure?",
            "What is function calling for vector database lookup and how is it implemented in Azure with Elastic Search?",
            "Can I integrate the Retrieval-Augmented Generation technology using Azure AI with Elastic Search for better query responses?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Elasticsearch"
        ]
    },
    {
        "title": "Function Calling with Prompty, LangChain and Pinecone",
        "description": "Function calling for vector database lookup based on user question.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/agent-openai-python-prompty-langchain-pinecone",
        "tags": [
            "msft",
            "aicollection",
            "python",
            "openai",
            "aistudio",
            "bicep",
            "ai",
            "pinecone"
        ],
        "id": "283300a7-84d2-4768-9c38-27eb6eac18bd",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Key Vault",
            "Azure Machine Learning"
        ],
        "sampleQueries": [
            "How do I set up a vector database lookup using Prompty, LangChain, and Pinecone?",
            "What is the process for deploying an LLM search agent with Azure OpenAI?",
            "Can I integrate Azure Key Vault with Pinecone for secure API key management in a vector database search application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python"
        ]
    },
    {
        "title": "API Center Analyzer",
        "description": "This sample provides an Azure API Center along with Azure Functions and Azure Event Grid to analyze API specs when registering or updating API specs to Azure API Center.",
        "author": "Justin Yoo, Pierce Boggan",
        "source": "https://github.com/Azure/APICenter-Analyzer",
        "tags": [
            "msft",
            "bicep",
            "apicenter",
            "functions",
            "eventgrid",
            "managedidentity",
            "appinsights",
            "loganalytics",
            "diagnosticsettings",
            "typescript"
        ],
        "id": "69c72097-2d94-4ce6-84f6-39660e086d6a",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure Functions",
            "Azure Event Grid",
            "Azure Managed Identity",
            "Azure Application Insights",
            "Azure Log Analytics"
        ],
        "sampleQueries": [
            "How do I register and analyze new API specs with Azure API Center?",
            "What are the steps to update API specs using Azure Functions and Azure Event Grid?",
            "Can I use TypeScript to handle Azure API Center spec registrations and updates?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Typescript"
        ]
    },
    {
        "title": "API Center Portal",
        "description": "This sample provides an Azure API Center along with Azure Static Web Apps that governs API specs registered on Azure API Center for developers and stakeholders.",
        "author": "Justin Yoo, Pierce Boggan",
        "source": "https://github.com/Azure/APICenter-Portal-Starter",
        "tags": [
            "msft",
            "bicep",
            "apicenter",
            "swa",
            "serviceprincipal",
            "typescript"
        ],
        "id": "7a19b6ec-5aa0-424e-a00e-182ba93ef5d9",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure Static Web Apps"
        ],
        "sampleQueries": [
            "How to deploy the Azure API Center portal using azd?",
            "What steps are required to run the API Center Portal locally?",
            "How can I host my own API Center portal on Azure Static Web Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "TypeScript"
        ]
    },
    {
        "title": "API Center Reference Sample",
        "description": "This sample provides an Azure API Center along with Azure App Service, Static Web Apps and Azure Functions that governs, analyzes and performs service discovery of API specs registered on Azure API Center.",
        "author": "Justin Yoo",
        "source": "https://github.com/Azure-Samples/APICenter-Reference",
        "tags": [
            "msft",
            "bicep",
            "apicenter",
            "appservice",
            "functions",
            "eventgrid",
            "managedidentity",
            "appinsights",
            "loganalytics",
            "diagnosticsettings",
            "swa",
            "serviceprincipal",
            "logicapps",
            "apim",
            "dotnetCsharp",
            "typescript"
        ],
        "id": "c6a63f43-1a2f-4e19-9af9-d28f2818da1d",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure API Management",
            "Azure App Service",
            "Azure Functions",
            "Azure Event Grid",
            "Azure Managed Identity",
            "Azure Application Insights",
            "Azure Log Analytics",
            "Azure Static Web Apps",
            "Azure Logic Apps"
        ],
        "sampleQueries": [
            "How to set up Azure API Center using the API Center Reference Sample?",
            "What are the steps to integrate API Center with Azure Static Web Apps and Azure Functions?",
            "Can I manage custom metadata in Azure API Center and how?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Bicep",
            "DotnetCsharp",
            "Typescript"
        ]
    },
    {
        "title": "GPT Video Analysis-In-A-Box",
        "description": "The GPT Video Analysis in-a-Box project leverages Azure OpenAI GPT-4 Turbo with Vision and Azure Data Factory to provide a low-code solution for analyzing images and videos, making AI adoption simpler and more efficient. This solution, part of the AI-in-a-Box framework by Microsoft Customer Engineers and Architects, ensures quality, efficiency, and rapid deployment of AI and ML solutions across various industries.",
        "author": "AI-in-a-Box Team",
        "source": "https://github.com/Azure-Samples/gpt-video-analysis-in-a-box",
        "tags": [
            "msft",
            "openai",
            "bicep",
            "cosmosdb",
            "azuredatafactory",
            "blobstorage",
            "ai"
        ],
        "id": "8000f86e-cd2f-43e0-8441-5112c5c31120",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure Data Factory",
            "Azure Blob Storage",
            "Azure Cosmos DB",
            "Azure Key Vault",
            "Azure Computer Vision"
        ],
        "sampleQueries": [
            "How can I implement GPT-4 Turbo with Vision for video analysis using Azure Data Factory?",
            "What is the process for analyzing vehicle damage in videos using Azure OpenAI and Azure AI Vision?",
            "How to deploy the GPT Video Analysis-in-a-Box solution on Azure for image and video analysis in the AI-in-a-Box framework?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Powershell",
            "Bicep"
        ]
    },
    {
        "title": "Build a Copilot app using Azure Cosmos DB, Azure OpenAI Service and Azure App Service",
        "description": "Build a copilot application with Azure OpenAI Service, Azure Cosmos DB for NoSQL vector database & Azure App Service.",
        "author": "Azure Cosmos DB Content Team",
        "source": "https://github.com/AzureCosmosDB/cosmosdb-nosql-copilot",
        "tags": [
            "msft",
            "openai",
            "gpt",
            "cosmosdb",
            "bicep",
            "ai",
            "dotnetCsharp",
            "managedidentity",
            "appservice",
            "semantickernel",
            "blazor"
        ],
        "id": "ca134ac5-31fc-4221-851b-a3c2f2bf98d9",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Cosmos DB",
            "Azure App Service",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How to build a multi-tenant Generative-AI chat application with Azure Cosmos DB and OpenAI",
            "What are the steps to implement RAG Pattern with Azure Cosmos DB vector search in a Copilot app?",
            "Can you integrate Semantic Kernel SDK with Azure OpenAI Service for a Copilot application?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            "Blazor"
        ]
    },
    {
        "title": "Serverless Azure OpenAI Quick Start with LlamaIndex (Python)",
        "description": "This sample shows how to quickly get started with LlamaIndex.ai on Azure. The application is hosted on Azure Container Apps. You can use it as a starting point for building more complex RAG applications.",
        "author": "Marlene Mhangami",
        "source": "https://github.com/Azure-Samples/llama-index-python",
        "tags": [
            "msft",
            "openai",
            "gpt",
            "bicep",
            "ai",
            "python",
            "managedidentity",
            "aca",
            "ai",
            "rag",
            "aicollection"
        ],
        "id": "0c327019-e4d4-49bf-b310-36e1e0914995",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How to deploy a serverless LlamaIndex.ai application on Azure Container Apps",
            "What's needed to start building RAG applications with Azure OpenAI and LlamaIndex in Python?",
            "Can I add my own data sources to a LlamaIndex RAG chatbot hosted on Azure?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "JavaScript",
            "TypeScript",
            "FastAPI",
            "Next.js"
        ]
    },
    {
        "title": "Serverless Azure OpenAI Quick Start with LlamaIndex (JavaScript)",
        "description": "This sample shows how to quickly get started with LlamaIndex.ai on Azure. The application is hosted on Azure Container Apps. You can use it as a starting point for building more complex RAG applications.",
        "author": "Wassim Chegham",
        "source": "https://github.com/Azure-Samples/llama-index-javascript",
        "tags": [
            "msft",
            "openai",
            "bicep",
            "javascript",
            "nodejs",
            "ai",
            "aca",
            "rag",
            "aicollection"
        ],
        "id": "444b9fdf-aeac-43d8-9c10-73eea3b44c9c",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure OpenAI"
        ],
        "sampleQueries": [
            "How to deploy a Serverless LlamaIndex application on Azure using JavaScript?",
            "What is the process to integrate LlamaIndex with Azure OpenAI for building RAG applications?",
            "Can I host a full-stack chat application powered by Azure OpenAI and LlamaIndex on Azure Container Apps?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Javascript",
            "Nodejs",
            "Typescript"
        ]
    },
    {
        "title": "NLP to SQL In-A-Box",
        "description": "NLP-SQL-in-a-Box is part of Microsoft's AI-in-a-Box framework, designed to simplify the deployment of AI and ML solutions. This project enables users to interact with SQL databases using natural language and speech, leveraging Azure OpenAI, Semantic Kernel, and Azure AI Speech Service to translate spoken queries into SQL statements, execute them, and deliver results audibly, ensuring an intuitive and user-friendly experience.",
        "author": "AI-in-a-Box Team",
        "source": "https://github.com/Azure-Samples/nlp-sql-in-a-box",
        "tags": [
            "msft",
            "openai",
            "gpt",
            "bicep",
            "ai",
            "python",
            "azuresql",
            "speechservice",
            "azureai",
            "managedidentity",
            "semantickernel",
            "new"
        ],
        "id": "c1ea7827-0596-4556-a9be-01b772fd94a7",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure OpenAI",
            "Azure SQL Database",
            "Azure AI Speech Service",
            "Azure Managed Identity"
        ],
        "sampleQueries": [
            "How to set up NLP to SQL translation using Azure services?",
            "What are the steps to deploy the NLP-SQL-in-a-Box solution on Azure?",
            "Can Azure AI Speech Service be integrated with SQL databases for voice-enabled querying?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python"
        ]
    },
    {
        "title": "RAG using Kernel Memory on Azure",
        "description": "Kernel Memory (KM) is a multi-modal AI Service specialized in the efficient indexing of datasets through custom continuous data hybrid pipelines, with support for Retrieval Augmented Generation (RAG), synthetic memory, prompt engineering, and custom semantic memory processing.",
        "author": "Kernel Memory Team",
        "source": "https://github.com/microsoft/kernel-memory",
        "tags": [
            "msft",
            "openai",
            "aca",
            "ai",
            "aisearch",
            "azureai",
            "bicep",
            "managedidentity",
            "blobstorage",
            "dotnetCsharp",
            "gpt",
            "agw",
            "semantickernel",
            "azurestorage",
            "appinsights",
            "vnets",
            "kernelmemory",
            "promptengineering",
            "new",
            "rag"
        ],
        "id": "eb384955-4583-41de-a87f-42bf6bfb1439",
        "deploymentOptions": [
            "azcli",
            "bicep"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure AI",
            "Azure Blob Storage",
            "Azure Monitor",
            "Azure Application Insights",
            "Azure Virtual Networks",
            "Azure Managed Identity",
            "Azure Container Apps"
        ],
        "sampleQueries": [
            "How to deploy Kernel Memory on Azure for multi-modal AI services",
            "Can I use Kernel Memory for RAG processes with datasets in Azure?",
            "What are the best practices for setting up Kernel Memory with custom semantic memory processing?"
        ],
        "sourceType": "Azd",
        "tech": [
            "C#",
            ".NET"
        ]
    },
    {
        "title": "Serverless Azure OpenAI Assistant Quick Start with Function Calling",
        "description": "Allows you to create AI assistants tailored to your needs via custom instructions and tools like code interpreter and custom functions.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/azure-openai-assistant-javascript",
        "tags": [
            "javascript",
            "gpt",
            "swa",
            "functions",
            "openai",
            "managedidentity",
            "openai",
            "aicollection",
            "msft",
            "new"
        ],
        "id": "9691c16c-500a-40c2-9b55-994fff837a35",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Static Web Apps",
            "Azure Functions",
            "Azure Managed Identity"
        ],
        "sampleQueries": [
            "How to set up a serverless Azure OpenAI Assistant with Function Calling",
            "What are the prerequisites for running the Serverless Azure OpenAI Assistant Quick Start?",
            "How can I use Azure Functions to extend the capabilities of my OpenAI Assistant?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Javascript"
        ]
    },
    {
        "title": "Chat + Vision using Azure OpenAI",
        "description": "A demonstration of chatting with uploaded images using OpenAI vision models like gpt-4o.",
        "author": "Azure Content Team",
        "source": "https://github.com/Azure-Samples/openai-chat-vision-quickstart",
        "tags": [
            "python",
            "managedidentity",
            "aca",
            "azureai",
            "aicollection",
            "msft",
            "new"
        ],
        "id": "0f6f3413-2d11-49fd-87a9-a87121f3a70a",
        "deploymentOptions": [
            "azcli"
        ],
        "deploymentConfig": {},
        "products": [
            "Azure Container Apps",
            "Azure OpenAI",
            "Azure Container Registry",
            "Azure Log Analytics",
            "Managed Identity"
        ],
        "sampleQueries": [
            "How can I integrate OpenAI's vision models with a chat application using Azure?",
            "What are the steps to deploy a Python chat app with image upload on Azure Container Apps?",
            "Can I use Azure OpenAI for generating responses to user messages and images in real-time?"
        ],
        "sourceType": "Azd",
        "tech": [
            "Python",
            "Quart",
            "Openai"
        ]
    }
]